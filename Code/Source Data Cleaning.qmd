---
title: "Source Data Cleaning"
format: html
editor:
  mode: source
---

This code is intended to clean the raw source data found in /Data/Source Data/ to level that is necessary for making plots and figures.

## Packages
```{r}

library(readxl)
library(dplyr)
library(stringr)
library(tidyr)
library(readODS)
library(zoo)

```

## Set working directory
Set relative filepath
```{r}

# Setting up wd for relative file paths
# This sets wd to wherever the document is saved - this should be the github desktop folder
if(Sys.getenv("RSTUDIO") == '1' & !knitr::is_html_output()) { # If using Rstudio and not rendering
	setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
} else if(Sys.getenv("RSTUDIO") != '1'){ # If using Rscript
	initial.options <- commandArgs(trailingOnly = FALSE)
	file.arg.name <- "--file="
	script.name <- sub(file.arg.name, "", initial.options[grep(file.arg.name, initial.options)])
	script.basename <- dirname(script.name)
	setwd(file.path(getwd(), script.basename))
}

```

## Options
```{r}

output_filepath <- "../Data/Cleaned Data/"

```

## Functions

### Cleaning NI Cancer Data
```{r}

clean_ni_cancer_data <- function(data, site, incmort){
  
  
  # Get sexes that this applies to
  groups <- unique(data[4,])[!is.na(unique(data[4,]))]
  
  # Filter dataframe to useful data
  colnames(data) <- data[5,]
  data <- data[-(1:5),]
  
  if(incmort == "Incidence"){

    # Get ASR data
    ASR_data <- as.vector(as.matrix(data[,grepl(colnames(data), pattern = "European age-standardised incidence rate per 100,000")]))
    
    # Get raw incidence rates
    Incidence_data <- as.vector(as.matrix(data[,grepl(colnames(data), pattern = "Total number of")]))
    
    # Combine into one dataframe
    data_2 <- data.frame(Year = rep(data$`Year of diagnosis`, length(groups)),
                              Country = "Nothern Ireland",
                              Cancer_Site = site,
                              Sex = rep(groups, each = nrow(data)),
                              Incidences = Incidence_data,
                              ASR = ASR_data)
    
  } else if(incmort == "Mortality"){
    
    # Get ASR data
    ASR_data <- as.vector(as.matrix(data[,grepl(colnames(data), pattern = "European age-standardised mortality rate per 100,000")]))
    
    # Get raw Mortality rates
    Mortality_data <- as.vector(as.matrix(data[,grepl(colnames(data), pattern = "Total number of")]))
    
    # Combine into one dataframe
    data_2 <- data.frame(Year = rep(data$`Year of death`, length(groups)),
                              Country = "Nothern Ireland",
                              Cancer_Site = site,
                              Sex = rep(groups, each = nrow(data)),
                              Mortalities = Mortality_data,
                              ASR = ASR_data)
  
  }
  
  # Output data
  return(data_2)
  

}


```

## Initialising Dataframe
```{r}

output <- data.frame(year = numeric(0), country = character(0), group = character(0), age_group = character(0), variable = character(0), value = numeric(0))

```

## Data Cleaning - Risk Factors

### England

#### Obesity
```{r}

obesity_england <- read_excel("../Data/Source Data/HSE-2021-Overweight-and-obesity-tables.xlsx", sheet = "Table 8")

# Cleaning to table
colnames(obesity_england) <- c("Column 1", obesity_england[3,-1])
obesity_england <- obesity_england[-(1:3),-ncol(obesity_england)]

obesity_england <- obesity_england |>
  mutate(across(-`Column 1`, as.numeric)) |>
  filter(!is.na(`Column 1`)) |>
  filter(!grepl(`Column 1`, pattern = "^Mean|^Standard"))

# Filter out metadata
obesity_england <- obesity_england[1:(which(obesity_england$`Column 1` == "Source: Health Survey for England, NHS Digital")-1),]

# Group into groups
obesity_england <- obesity_england |>
  mutate(
    
    group = case_when(
      row_number() <= nrow(obesity_england)/3 ~ "Men",
      row_number() <= 2*nrow(obesity_england)/3 ~ "Women",
      row_number() <= nrow(obesity_england) ~ "All",
    )
    
  ) |>
  group_by(group) |>
  # Remove header for group and remove weights
  filter(between(row_number(), 2, 57)) |>
  ungroup()

# Find age groups
age_groups <- c(unique(obesity_england$`Column 1`[grepl(obesity_england$`Column 1`, pattern = "^[0-9]")]), "16+")
age_groups <- rep(age_groups, each = nrow(obesity_england)/(3*length(age_groups)))
obesity_england$age_group <- rep(age_groups, 3)

# Filter out groups from data
obesity_england <- obesity_england |>
  filter(`Column 1` != age_group) |>
  # Pivot longer to create year column
  pivot_longer(cols = colnames(obesity_england)[grepl(colnames(obesity_england), pattern = "^[0-9]")]) |>
  rename(year = name, variable = `Column 1`) |>
  # Only 2003 - 2019 valid
  mutate(year = as.numeric(year)) |>
  filter(between(year, 2003, 2019)) |>
  # Clean age group column
  mutate(age_group = gsub(age_group, pattern = " years", replacement = "")) |>
  # Filter to variable of interest and age group of interest - can adapt to add more
  filter(age_group == "16+") |>
  filter(variable == "% obese") |>
  mutate(variable = "% Obese") |>
  # Add country
  mutate(country = "England")


# Combine with output data
output <- rbind(output, obesity_england)


```

#### Alcohol
```{r}

alcohol_england <- read_excel("../Data/Source Data/HSE-2022-Adult-drinking-tables.xlsx", sheet = "Table 2")

# Cleaning to table
colnames(alcohol_england) <- c("Column 1", alcohol_england[3,-1])
alcohol_england <- alcohol_england[-(1:3),-ncol(alcohol_england)]

alcohol_england <- alcohol_england |>
  mutate(across(-`Column 1`, as.numeric)) |>
  filter(!is.na(`Column 1`)) |>
  filter(!grepl(`Column 1`, pattern = "^Mean|^Standard|^Median"))

# Filter out metadata
alcohol_england <- alcohol_england[1:(which(alcohol_england$`Column 1` == "Source: Health Survey for England, NHS England")-1),]

# Group into groups
alcohol_england <- alcohol_england |>
  mutate(
    
    group = case_when(
      row_number() <= nrow(alcohol_england)/3 ~ "Men",
      row_number() <= 2*nrow(alcohol_england)/3 ~ "Women",
      row_number() <= nrow(alcohol_england) ~ "All",
    )
    
  ) |>
  group_by(group) |>
  # Remove header for group and remove weights
  filter(between(row_number(), 2, 57)) |>
  ungroup()

# Find age groups
age_groups <- c(unique(alcohol_england$`Column 1`[grepl(alcohol_england$`Column 1`, pattern = "^[0-9]")]), "16+")
age_groups <- rep(age_groups, each = nrow(alcohol_england)/(3*length(age_groups)))
alcohol_england$age_group <- rep(age_groups, 3)

# Filter out groups from data
alcohol_england <- alcohol_england |>
  filter(`Column 1` != age_group) |>
  filter(!grepl(`Column 1`, pattern = "^All")) |>
  # Pivot longer to create year column
  pivot_longer(cols = colnames(alcohol_england)[grepl(colnames(alcohol_england), pattern = "^[0-9]")]) |>
  rename(year = name, variable = `Column 1`) |>
  # Only 2003 - 2019 valid
  mutate(year = as.numeric(year)) |>
  filter(between(year, 2003, 2019)) |>
  # Clean age group column
  mutate(age_group = gsub(age_group, pattern = " years", replacement = "")) |>
  # Filter to variable of interest and age group of interest - can adapt to add more
  filter(age_group == "16+") |>
  # Need to clean variable names so they match across groups
  mutate(variable = gsub("\\(.*$", "", variable)) |>
  mutate(variable = gsub("\\s+$", "", variable)) |> # Removing whitespace at the end of the variable names
  # Need to create variable of interest
  pivot_wider(names_from = variable, values_from = value) |>
  mutate(value = `% more than 14, up to 21` + `% more than 21, up to 35` + `% more than 35, up to 50` + `% more than 50 units`,
         variable = "% Drinking Over Guidelines") |>
  # Add country
  mutate(country = "England") |>
  # Filter to variables of interest
  select(all_of(colnames(output)))


# Combine with output data
output <- rbind(output, alcohol_england)

```

#### Smoking
```{r}

smoking_england <- read_excel("../Data/Source Data/HSE-2022-Adults'-health-related-behaviours-tables.xlsx", sheet = "Table 2")

# Cleaning to table
colnames(smoking_england) <- c("age_group", smoking_england[3,-1])
smoking_england <- smoking_england[-(1:4),-ncol(smoking_england)]

smoking_england <- smoking_england |>
  mutate(across(-age_group, as.numeric)) |>
  filter(!is.na(age_group))

# Filter out metadata
smoking_england <- smoking_england[1:(which(smoking_england$age_group == "Source: Health Survey for England, NHS England")-1),]

# Group into groups
smoking_england <- smoking_england |>
  mutate(
    
    group = case_when(
      row_number() <= n()/3 ~ "Men",
      row_number() <= 2*n()/3 ~ "Women",
      row_number() <= n() ~ "All",
    )
    
  ) |>
  group_by(group) |>
  # Remove header for group and remove weights
  filter(between(row_number(), 3, 10)) |>
  ungroup() |>
  pivot_longer(cols = grep(colnames(smoking_england), pattern = "^[0-9]"), names_to = "year") |>
  mutate(
    
    age_group = case_when(
      grepl(age_group, pattern = "^[0-9]") ~ gsub(age_group, pattern = " years", replacement = ""),
      grepl(age_group, pattern = "^All") ~ "16+"),
    
    country = "England",
    
    variable = "% Smoke",
    
    year = as.numeric(year)
    
  ) |>
  filter(between(year, 2003, 2019)) |>
  filter(age_group == "16+")

# Add to output
output <- rbind(output, smoking_england)

```

#### Activity
```{r}

activity_england <- read_excel("../Data/Source Data/HSE-2021-Physical-activity-tables.xlsx", sheet = "Table 5")

# Filtering to age group of interest
activity_england <- activity_england |>
  filter(between(row_number(), 2, 3) | between(row_number(), 48, 51))

# Transposing
activity_england <- t(activity_england)

colnames(activity_england) <- activity_england[1,]
activity_england <- as.data.frame(activity_england[-1,])
colnames(activity_england) <- c("group", "year", colnames(activity_england)[-c(1,2)])

# Getting table into desired format
activity_england <- activity_england |>
  filter(!is.na(year)) |>
  mutate(group = rep(c("Men", "Women", "All"), each = 3)) |>
  rename(value = `Meets aerobic guidelines`) |>
  mutate(
    
    country = "England",
    
    age_group = "16+",
    
    variable = "% Meet Activity Guidelines"
    
  ) |>
  select(all_of(colnames(output)))

# Add to output
output <- rbind(output, activity_england)

```

#### Breast Screening
```{r}

screening_breast_england <- read.csv("../Data/Source Data/England_Breast_Screening_Trends.csv")

# Get into correct format
screening_breast_england <- screening_breast_england |>
  mutate(
    
    group = "Women",
    
    age_group = "50-70",
    
    country = "England",
    
    value = Value,
    
    year = as.numeric(substr(Time.period, 1, 4)),
    
    variable = "% Uptake Breast Screening"
    
  ) |>
  select(all_of(colnames(output)))


# Merge into output
output <- rbind(output, screening_breast_england)


```

#### Bowel Screening
```{r}

screening_bowel_england <- read.csv("../Data/Source Data/England_Bowel_Screening_Trends.csv")

# Get into correct format
screening_bowel_england <- screening_bowel_england |>
  mutate(
    
    group = "All",
    
    age_group = "60-74",
    
    country = "England",
    
    value = Value,
    
    year = as.numeric(substr(Time.period, 1, 4)),
    
    variable = "% Uptake Bowel Screening"
    
  ) |>
  select(all_of(colnames(output)))


# Merge into output
output <- rbind(output, screening_bowel_england)


```

### Scotland
#### Main
```{r}

# Read in data and clean to standard
data_scotland <- read.csv("../Data/Source Data/SHS_trend_data_sex.csv") |>
  filter(Categories %in% c("Hazardous/Harmful drinker", "Obesity", "Meets recommendations", "Current smoker")) |>
  mutate(
    
    group = case_when(
      Sex == "Male" ~ "Men",
      Sex == "Female" ~ "Women",
      TRUE ~ "All"),
    
    variable = case_when(
      Categories == "Obesity" ~ "% Obese",
      Categories == "Hazardous/Harmful drinker" ~ "% Drinking Over Guidelines",
      Categories == "Meets recommendations" ~ "% Meet Activity Guidelines",
      Categories == "Current smoker" ~ "% Smoke",
      TRUE ~ NA), # Can expand to add more variables
    
    age_group = "16+" # Inferred from the lower bound on the age groups in the SHS
    
  ) |>
  filter(!is.na(variable)) |>
  select(year = Year, country = Geographylevel, group, age_group, variable, value = Percent)

# Add data to output
output <- rbind(output, data_scotland)

```

#### Breast Screening
```{r}

screening_breast_scotland <- read_excel("../Data/Source Data/7_sbsp_uptake_invitations_2122.xlsx")

# Filter to information needed
screening_breast_scotland <- screening_breast_scotland |>
  filter(row_number() %in% c(6,13))

screening_breast_scotland <- as.data.frame(t(screening_breast_scotland))[-1,] |>
  mutate(
    
    year = as.numeric(substr(V1, 1, 4)),
    
    value = as.numeric(V2),
    
    country = "Scotland",
    
    age_group = "50-70",
    
    group = "Women",
    
    variable = "% Uptake Breast Screening"
    
  ) |>
  select(all_of(colnames(output))) |>
  filter(year != 2015) # Year reported as incomplete

# Merge into output
output <- rbind(output, screening_breast_scotland)


```

#### Bowel Screening
```{r}

screening_bowel_scotland <- read_excel("../Data/Source Data/2024-03-05-bowel-screening-kpi-report.xlsx", sheet = "KPI_1")

# Get Table1.1
screening_bowel_scotland <- screening_bowel_scotland |>
  filter(between(row_number(), 60, 64)) |>
  select(-`1. Overall uptake of screening - percentage of people with a final outright screening test result, out of those invited.`)

colnames(screening_bowel_scotland) <- c("group", screening_bowel_scotland[1,-1])
screening_bowel_scotland <- screening_bowel_scotland[-(1:2),]

screening_bowel_scotland <- screening_bowel_scotland |>
  pivot_longer(cols = colnames(screening_bowel_scotland)[-1], names_to = "year") |>
  mutate(
    
    year = as.numeric(substr(year, 1, 4)) + 1, # 3 year age band so taking middle year
    
    group = case_when(
      group == "Males" ~ "Men",
      group == "Females" ~ "Women",
      TRUE ~ "All"),
    
    country = "Scotland",
    
    variable = "% Uptake Bowel Screening",
    
    age_group = "50-74"
    
  ) |>
  select(all_of(colnames(output)))


# Merge with output
output <- rbind(output, screening_bowel_scotland)
  

```

### Northern Ireland
#### Obesity
```{r}

obesity_nireland <- read_excel("../Data/Source Data/hsni-trend-tables-22-23.xlsx", sheet = "BMI - Adults")

# Format into standard
obesity_nireland <- obesity_nireland |>
  filter(!is.na(`BMI - adults`)) |>
  filter(between(row_number(), 17, 32))

# Filter to useful columns
obesity_nireland <- obesity_nireland[,1:11]

colnames(obesity_nireland) <- c("variable", obesity_nireland[1,-1])

# Filter to variable of interest - can add more
obesity_nireland <- obesity_nireland |>
  mutate(group = rep(c("Men", "Women"), each = nrow(obesity_nireland)/2)) |>
  filter(variable %in% c("Underweight", "Normal weight", "Overweight", "Obese", "Morbidly obese"))

# Pivot longer to get year column
obesity_nireland <- obesity_nireland |>
  pivot_longer(cols = grep(colnames(obesity_nireland), pattern = "^[0-9]"), names_to = "year") |>
  # Taking earlier year in the year column
  mutate(year = as.numeric(substr(year, 1, 4))) |>
  mutate(
    
    country = "N. Ireland",
    
    age_group = "16+",
    
    value = as.numeric(value)
    
  ) |>
  # Need to combine variables to get to % Obese
  pivot_wider(names_from = variable) |>
  mutate(
    
    value = 100*(Obese + `Morbidly obese`),
    
    variable = "% Obese"
    
    ) |>
  select(all_of(colnames(output)))

# Add to output
output <- rbind(output, obesity_nireland)

```


#### Alcohol
```{r}

alcohol_nireland <- read_excel("../Data/Source Data/hsni-trend-tables-22-23.xlsx", sheet = "Alcohol prevalence & limits")

# Format into standard
alcohol_nireland <- alcohol_nireland |>
  filter(!is.na(`Alcohol - Prevalence and drinking within weekly limits`)) |>
  filter(between(row_number(), 16, 29))

# Filter to useful columns
alcohol_nireland <- alcohol_nireland[,1:14]

colnames(alcohol_nireland) <- c("variable", alcohol_nireland[1,-1])

# Filter to variable of interest - can add more
alcohol_nireland <- alcohol_nireland |>
  mutate(group = rep(c("Men", "Women"), each = nrow(alcohol_nireland)/2)) |>
  filter(variable %in% c("Non-drinker", "Drinks within weekly limits", "Drinks above weekly limits", "Drinks but unknown if within weekly limits"))

# Pivot longer to get year column
alcohol_nireland <- alcohol_nireland |>
  pivot_longer(cols = grep(colnames(alcohol_nireland), pattern = "^[0-9]"), names_to = "year") |>
  # Taking earlier year in the year column
  mutate(year = as.numeric(substr(year, 1, 4))) |>
  mutate(
    
    country = "N. Ireland",
    
    age_group = "18+",
    
    value = as.numeric(value)*100,
    
    variable = case_when(
      variable == "Drinks above weekly limits" ~ "% Drinking Over Guidelines",
      TRUE ~ NA)
    
  ) |>
  filter(!is.na(variable)) |>
  filter(!is.na(value)) |>
  select(all_of(colnames(output)))

# Add to output
output <- rbind(output, alcohol_nireland)

```

#### Smoking
```{r}

smoking_nireland <- read_excel("../Data/Source Data/hsni-trend-tables-22-23.xlsx", sheet = "Cigarette smoking")

# Format into standard
smoking_nireland <- smoking_nireland |>
  filter(!is.na(Smoking)) |>
  filter(between(row_number(), 14, 27))

# Filter to useful columns
smoking_nireland <- smoking_nireland[,1:14]

colnames(smoking_nireland) <- c("variable", smoking_nireland[1,-1])

# Filter to variable of interest - can add more
smoking_nireland <- smoking_nireland |>
  mutate(group = rep(c("Men", "Women"), each = nrow(smoking_nireland)/2)) |>
  filter(variable %in% c("Currently smokes cigarettes", "Used to smoke cigarettes regularly", "Used to smoke but not regularly", "Never smoked"))

# Pivot longer to get year column
smoking_nireland <- smoking_nireland |>
  pivot_longer(cols = grep(colnames(smoking_nireland), pattern = "^[0-9]"), names_to = "year") |>
  # Taking earlier year in the year column
  mutate(year = as.numeric(substr(year, 1, 4))) |>
  mutate(
    
    country = "N. Ireland",
    
    age_group = "16+",
    
    value = as.numeric(value)*100,
    
    variable = case_when(
      variable == "Currently smokes cigarettes" ~ "% Smoke",
      TRUE ~ NA)
    
  ) |>
  filter(!is.na(variable)) |>
  filter(!is.na(value)) |>
  select(all_of(colnames(output))) |>
  filter(year != 2020) # Year removed as not enough data

# Add to output
output <- rbind(output, smoking_nireland)


```

#### Activity
```{r}

activity_nireland <- read_excel("../Data/Source Data/hsni-trend-tables-22-23.xlsx", sheet = "Physical Activity")

# Format into standard
activity_nireland <- activity_nireland |>
  filter(!is.na(`Physical activity`)) |>
  filter(between(row_number(), 20, 33))

# Filter to useful columns
activity_nireland <- activity_nireland[,1:14]

colnames(activity_nireland) <- c("variable", activity_nireland[1,-1])

# Filter to variable of interest - can add more
activity_nireland <- activity_nireland |>
  mutate(group = rep(c("Men", "Women"), each = nrow(activity_nireland)/2)) |>
  filter(variable %in% c("Meets recommendations", "Some activity", "Low activity", "Inactive"))

# Pivot longer to get year column
activity_nireland <- activity_nireland |>
  pivot_longer(cols = grep(colnames(activity_nireland), pattern = "^[0-9]"), names_to = "year") |>
  # Taking earlier year in the year column
  mutate(year = as.numeric(substr(year, 1, 4))) |>
  mutate(
    
    country = "N. Ireland",
    
    age_group = "16+",
    
    value = as.numeric(value)*100,
    
    variable = case_when(
      variable == "Meets recommendations" ~ "% Meet Activity Guidelines",
      TRUE ~ NA)
    
  ) |>
  filter(!is.na(variable)) |>
  filter(!is.na(value)) |>
  select(all_of(colnames(output)))

# Add to output
output <- rbind(output, activity_nireland)

```


#### Breast Screening
```{r}

screening_breast_nireland <- read_excel("../Data/Source Data/NIreland_Breast_Screening.xlsx") |>
  mutate(
    
    year = Year,
    
    value = Uptake,
    
    country = "N. Ireland",
    
    variable = "% Uptake Breast Screening",
    
    group = "Women",
    
    age_group = "50-70"
    
  ) |>
  select(all_of(colnames(output)))

# Merge into output
output <- rbind(output, screening_breast_nireland)



```

#### Bowel Screening
```{r}

# Loop through years and add data to output iteratively
# NOTE: 2018 has a note that the 'total includes people without a registered GP' - check this year is valid to use
for(year in 2018:2022){
  
  if(year != 2022){
    screening_bowel_nireland_temp <- read_excel(paste0("../Data/Source Data/Core Tables ", year, " - website.xlsx"), sheet = "Table 15d")
  } else {
    screening_bowel_nireland_temp <- read_excel("../Data/Source Data/Core Tables 2022 - Excel tables_1.xlsx", sheet = "Table 15d")
  }
  
  screening_bowel_nireland_temp_value <- as.numeric(screening_bowel_nireland_temp[grepl(screening_bowel_nireland_temp[[colnames(screening_bowel_nireland_temp)[1]]],
                                                                                        pattern = "^Northern Ireland"),4])
  
  new_row <- data.frame(
    year = year,
    country = "N. Ireland",
    variable = "% Uptake Bowel Screening",
    value = screening_bowel_nireland_temp_value*100,
    age_group = "60-74",
    group = "All"
  )
  
  # Merge into output
  output <- rbind(output, new_row)

}


```

### Wales
#### NSW
```{r}

# Loop through years and clean data from that year
for(year in 2016:2019){
  
  data_wales_temp <- read.csv(paste0("../Data/Source Data/NSW_trends_", year, "_", year+1, ".csv"), na.strings = "")
  
  # Filter NA rows
  data_wales_temp <- filter(data_wales_temp, !is.na(`X.1`))
  
  # Pivot out group
  data_wales_temp <- pivot_longer(data_wales_temp, cols = c("Persons", "Male", "Female"))
  
  # Filter to variables of interest
  data_wales_temp <- filter(data_wales_temp,
                            `X.1` %in% c("Smoker ", "Average weekly alcohol consumption - above 14 units (over guidelines) ", "Active at least 150 minutes in previous week ",
                                         "BMI 30+ (obese) "))
  
  # Clean variable names
  data_wales_temp <- mutate(data_wales_temp,
                            variable = case_when(
                              `X.1` == "Smoker " ~ "% Smoke",
                              `X.1` == "Average weekly alcohol consumption - above 14 units (over guidelines) " ~ "% Drinking Over Guidelines",
                              `X.1` == "Active at least 150 minutes in previous week " ~ "% Meet Activity Guidelines",
                              `X.1` == "BMI 30+ (obese) " ~ "% Obese"),
                            year = year,
                            country = "Wales",
                            group = case_when(
                              name == "Male" ~ "Men",
                              name == "Female" ~ "Women",
                              TRUE ~ "All"),
                            age_group = "16+",
                            value = as.numeric(value)
                            )
  
  # Filter to colnames in output and merge into output
  data_wales_temp <- select(data_wales_temp, all_of(colnames(output)))
  
  output <- rbind(output, data_wales_temp)
  
}


```

#### WHS
```{r}

data_wales <- read.csv("../Data/Source Data/WHS_trends.csv", na.strings = "")

# Remove NA rows
data_wales <- data_wales |>
  filter(!is.na(`X.1`)) |>
  mutate(group = case_when(
    row_number() <= n()/3 ~ "Men",
    row_number() <= 2*n()/3 ~ "Women",
    row_number() <= n() ~ "All"
  )) |>
  rename(year = `X.1`) |>
  select(-X)

# Pivot longer to get variables
data_wales <- data_wales |>
  mutate(across(-c(group, year), as.numeric)) |>
  pivot_longer(cols = colnames(data_wales)[!colnames(data_wales) %in% c("group", "year")], names_to = "variable") |>
  mutate(
    
    variable = case_when(
      variable == "Exercise.or.physical.activity.done..new.questions...Active.for.150.minutes.or.more.in.the.previous.week..8." ~ "% Meet Activity Guidelines",
      variable == "Obese..10." ~ "% Obese",
      variable == "Smoker..1." ~ "% Smoke"),
    
    country = "Wales",
    
    age_group = "16+",
    
    year = if_else(grepl(year, pattern = "\\/"),
                   as.numeric(substr(year, 1, 4)) + 1, # Taking later year of previous years as they match up with the following years
                   as.numeric(year))
    
  ) |>
  filter(!is.na(variable)) |>
  filter(!is.na(value)) |>
  select(all_of(colnames(output)))


# Add to output
output <- rbind(output, data_wales)

```

#### Breast Screening
```{r}

screening_breast_wales <- read_excel("../Data/Source Data/Wales_Screening.xlsx", sheet = "Sheet1")

# Get data into correct format
screening_breast_wales <- screening_breast_wales |>
  mutate(
    
    year = Year,
    
    value = Uptake,
    
    variable = Variable,
    
    country = "Wales",
    
    group = "Women",
    
    age_group = "50-70"
    
    
  ) |>
  select(all_of(colnames(output)))

# Merge with output
output <- rbind(output, screening_breast_wales)


```

#### Bowel Screening
```{r}

screening_bowel_wales <- read_excel("../Data/Source Data/Wales_Screening.xlsx", sheet = "Sheet2")

# Get data into correct format
screening_bowel_wales <- screening_bowel_wales |>
  mutate(
    
    year = Year,
    
    value = Uptake,
    
    variable = Variable,
    
    country = "Wales",
    
    group = "All",
    
    age_group = "60-74"
    
    
  ) |>
  select(all_of(colnames(output)))

# Merge with output
output <- rbind(output, screening_bowel_wales)

# Get additional years
screening_bowel_wales_extra <- read_excel("../Data/Source Data/8. BSW_uptake_by_cluster_2020-21 SUMMARY v1.xls", sheet = "GP Cluster")

screening_bowel_wales_extra <- screening_bowel_wales_extra[grepl(screening_bowel_wales_extra[[colnames(screening_bowel_wales_extra)[1]]], pattern = "^Total"),5]

new_row <- data.frame(
  year = 2020,
  variable = "% Uptake Bowel Screening",
  value = as.numeric(screening_bowel_wales_extra),
  group = "All",
  age_group = "60-74",
  country = "Wales"
)

# Merge new row into output
output <- rbind(output, new_row)


screening_bowel_wales_extra <- read_excel("../Data/Source Data/9. BSW_uptake_by_cluster_2021-22 SUMMARY.xls", sheet = "GP Cluster")

screening_bowel_wales_extra <- screening_bowel_wales_extra[grepl(screening_bowel_wales_extra[[colnames(screening_bowel_wales_extra)[1]]], pattern = "^Total"),5]

new_row <- data.frame(
  year = 2021,
  variable = "% Uptake Bowel Screening",
  value = as.numeric(screening_bowel_wales_extra),
  group = "All",
  age_group = "60-74",
  country = "Wales"
)

# Merge new row into output
output <- rbind(output, new_row)


```

## Data Cleaning - Cancer Rates

### England
```{r}

# Incidence
incidence_england <- read_ods("../Data/Source Data/Cancer_Registrations_final.ods", sheet = "Table_5")

colnames(incidence_england) <- incidence_england[2,]
incidence_england <- incidence_england[-c(1,2),]

incidence_england <- incidence_england |>
  mutate(Country = "England") |> 
  filter(`Site description` %in% c("All malignant cancers excluding non-melanoma skin cancer (NMSC)",
                                   "Malignant neoplasm of breast",
                                   "Malignant neoplasm of colon and rectum",
                                   "Malignant neoplasm of trachea, bronchus and lung",
                                   "Malignant neoplasm of oesophagus",
                                   "Malignant neoplasm of pancreas",
                                   "Malignant neoplasm of prostate")) |>
  select(Year, Country, Cancer_Site = `Site description`, Sex = Gender, Incidences = Count, ASR = `Rate (per 100,000 population)`) 


# Mortality
mortality_england <- read_ods("../Data/Source Data/Cancer_Mortality_final.ods", sheet = "Table_2")

colnames(mortality_england) <- mortality_england[2,]
mortality_england <- mortality_england[-c(1,2),]

mortality_england <- mortality_england |>
  mutate(Country = "England") |> 
  filter(`Site description` %in% c("All malignant cancers excluding non-melanoma skin cancer (NMSC)",
                                   "Malignant neoplasm of breast",
                                   "Malignant neoplasm of colon and rectum",
                                   "Malignant neoplasm of trachea, bronchus and lung",
                                   "Malignant neoplasm of oesophagus",
                                   "Malignant neoplasm of pancreas",
                                   "Malignant neoplasm of prostate")) |>
  select(Year, Country, Cancer_Site = `Site description`, Sex = Gender, Mortalities = Count, ASR = `Rate (per 100,000 population)`) # Sex == Gender comparison not accurate, but necessary for statistical comparisons between countries.


```

### Scotland

```{r}

# Incidence
incidence_scotland <- read.csv("../Data/Source Data/opendata_inc9721_scotland.csv")

incidence_scotland <- incidence_scotland |>
  mutate(Country = "Scotland") |>
  filter(CancerSite %in% c("All cancer types",
                           "Breast",
                           "Trachea, bronchus and lung",
                           "Colorectal cancer",
                           "Oesophagus",
                           "Pancreas",
                           "Prostate")) |>
  select(Year, Country, Cancer_Site = CancerSite, Sex, Incidences = IncidencesAllAges, ASR = EASR)


# Mortality
mortality_scotland <- read.csv("../Data/Source Data/opendata_mort9520_scotland.csv") |>
  mutate(Country = "Scotland") |>
  filter(CancerSite %in% c("All cancer types",
                           "Breast",
                           "Trachea, bronchus and lung",
                           "Colorectal cancer",
                           "Oesophagus",
                           "Pancreas",
                           "Prostate")) |>
  select(Year, Country, Cancer_Site = CancerSite, Sex, Mortalities = DeathsAllAges, ASR = EASR)


```


### Northern Ireland

```{r}

# Initialise empty data frame
incidence_nireland <- data.frame(Year = numeric(0), Country = character(0), Cancer_Site = character(0), Sex = character(0), Incidences = numeric(0), ASR = numeric(0))
mortality_nireland <- data.frame(Year = numeric(0), Country = character(0), Cancer_Site = character(0), Sex = character(0), Mortalities = numeric(0), ASR = numeric(0))

# Incidence

## All Cancers (excl NMSC)
temp_data <- read_excel("../Data/Source Data/All cancers (ex NMSC) data tables.xlsx", sheet = "T03") |>
  clean_ni_cancer_data(site = "All Cancers", incmort = "Incidence")
incidence_nireland <- rbind(incidence_nireland, temp_data)

## Breast Cancer
temp_data <- read_excel("../Data/Source Data/female-breast-cancer-data-tables.xlsx", sheet = "T03") |>
  clean_ni_cancer_data(site = "Breast", incmort = "Incidence")
incidence_nireland <- rbind(incidence_nireland, temp_data)

## Colorectal Cancer
temp_data <- read_excel("../Data/Source Data/colorectal-cancer-data-tables.xlsx", sheet = "T03") |>
  clean_ni_cancer_data(site = "Colorectal", incmort = "Incidence")
incidence_nireland <- rbind(incidence_nireland, temp_data)

## Lung Cancer
temp_data <- read_excel("../Data/Source Data/lung-cancer-data-tables.xlsx", sheet = "T03") |>
  clean_ni_cancer_data(site = "Lung", incmort = "Incidence")
incidence_nireland <- rbind(incidence_nireland, temp_data)

## Oesophageal Cancer
temp_data <- read_excel("../Data/Source Data/oesophageal-cancer-data-tables.xlsx", sheet = "T03") |>
  clean_ni_cancer_data(site = "Oesophageal", incmort = "Incidence")
incidence_nireland <- rbind(incidence_nireland, temp_data)

## Pancreatic Cancer
temp_data <- read_excel("../Data/Source Data/Pancreatic cancer data tables.xlsx", sheet = "T03") |>
  clean_ni_cancer_data(site = "Pancreatic", incmort = "Incidence")
incidence_nireland <- rbind(incidence_nireland, temp_data)

## Prostate Cancer
temp_data <- read_excel("../Data/Source Data/Prostate cancer data tables.xlsx", sheet = "T03") |>
  clean_ni_cancer_data(site = "Prostate", incmort = "Incidence")
incidence_nireland <- rbind(incidence_nireland, temp_data)


# Mortality

## All Cancers (excl NMSC)
temp_data <- read_excel("../Data/Source Data/All cancers (ex NMSC) data tables.xlsx", sheet = "T26") |>
  clean_ni_cancer_data(site = "All Cancers", incmort = "Mortality")
mortality_nireland <- rbind(mortality_nireland, temp_data)

## Breast Cancer
temp_data <- read_excel("../Data/Source Data/female-breast-cancer-data-tables.xlsx", sheet = "T23") |>
  clean_ni_cancer_data(site = "Breast", incmort = "Mortality")
mortality_nireland <- rbind(mortality_nireland, temp_data)

## Colorectal Cancer
temp_data <- read_excel("../Data/Source Data/colorectal-cancer-data-tables.xlsx", sheet = "T23") |>
  clean_ni_cancer_data(site = "Colorectal", incmort = "Mortality")
mortality_nireland <- rbind(mortality_nireland, temp_data)

## Lung Cancer
temp_data <- read_excel("../Data/Source Data/lung-cancer-data-tables.xlsx", sheet = "T23") |>
  clean_ni_cancer_data(site = "Lung", incmort = "Mortality")
mortality_nireland <- rbind(mortality_nireland, temp_data)

## Oesophageal Cancer
temp_data <- read_excel("../Data/Source Data/oesophageal-cancer-data-tables.xlsx", sheet = "T21") |>
  clean_ni_cancer_data(site = "Oesophageal", incmort = "Mortality")
mortality_nireland <- rbind(mortality_nireland, temp_data)

## Pancreatic Cancer
temp_data <- read_excel("../Data/Source Data/Pancreatic cancer data tables.xlsx", sheet = "T21") |>
  clean_ni_cancer_data(site = "Pancreatic", incmort = "Mortality")
mortality_nireland <- rbind(mortality_nireland, temp_data)

## Prostate Cancer
temp_data <- read_excel("../Data/Source Data/Prostate cancer data tables.xlsx", sheet = "T23") |>
  clean_ni_cancer_data(site = "Prostate", incmort = "Mortality")
mortality_nireland <- rbind(mortality_nireland, temp_data)


```

### Wales
```{r}

# Incidence
incidence_wales <- read_excel("../Data/Source Data/CancerIncidenceWales_DataTables_FinalRelease_2002-2020_Geography.xlsx", sheet = "Table 1 - Geography")
colnames(incidence_wales) <- incidence_wales[3,]
incidence_wales <- incidence_wales[-c(1:3),]

# Clean dataset to standard
incidence_wales <- incidence_wales |>
  filter(Period == "One year") |>
  filter(Geography == "Wales") |>
  filter(`Cancer type` %in% c("All malignancies excluding NMSC",
                              "Colorectal",
                              "Breast",
                              "Lung",
                              "Oesophagus",
                              "Pancreas",
                              "Prostate")) |>
  mutate(Country = "Wales") |>
  mutate(Year = as.numeric(Year)) |>
  select(Year, Country, Cancer_Site = `Cancer type`, Sex, Incidences = Count, ASR = `European age-standardised rate`)

# Mortality
mortality_wales <- read_excel("../Data/Source Data/CancerMortalityWales_DataTables_2002-2022_Geography.xlsx", sheet = "Table 1 - Geography")
colnames(mortality_wales) <- mortality_wales[3,]
mortality_wales <- mortality_wales[-c(1:3),]

# Clean dataset to standard
mortality_wales <- mortality_wales |>
  filter(Period == "One year") |>
  filter(Geography == "Wales") |>
  filter(`Cancer type` %in% c("All cancers excluding NMSC",
                              "Colorectal",
                              "Breast",
                              "Lung",
                              "Oesophagus",
                              "Pancreas",
                              "Prostate")) |>
  mutate(Country = "Wales") |>
  mutate(Year = as.numeric(Year)) |>
  select(Year, Country, Cancer_Site = `Cancer type`, Sex, Mortalities = Count, ASR = `European age-standardised rate`)


```



### Combining Datasets
```{r}

# Incidence
incidence_all <- rbind(incidence_england, incidence_scotland) |>
  rbind(incidence_wales) |>
  rbind(incidence_nireland)

incidence_all <- incidence_all |>
  mutate(
    
    Year = as.numeric(Year),
    
    # Cleaning and standardising site of cancer
    Cancer_Site = case_when(
      grepl(Cancer_Site, pattern = "All") ~ "All sites excl. NMSC",
      grepl(Cancer_Site, pattern = "Breast", ignore.case = T) ~ "Breast",
      grepl(Cancer_Site, pattern = "Colo|colo") ~ "Colorectal",
      grepl(Cancer_Site, pattern = "Lung|lung") ~ "Lung",
      grepl(Cancer_Site, pattern = "Oesophag", ignore.case = T) ~ "Oesophageal",
      grepl(Cancer_Site, pattern = "Pancrea", ignore.case = T) ~ "Pancreatic",
      grepl(Cancer_Site, pattern = "Prostate", ignore.case = T) ~ "Prostate",
      TRUE ~ NA),
    
    # Standardising Sex variable
    Sex = case_when(
      grepl(Sex, pattern = "female", ignore.case = T) ~ "Women",
      grepl(Sex, pattern = "male", ignore.case = T) ~ "Men",
      grepl(Sex, pattern = "All|Persons", ignore.case = T) ~ "All",
      TRUE ~ Sex),
    
    ASR = as.numeric(ASR)
    
    
  ) |>
  # Filtering for specified years
  # filter(between(Year, 2000, 2019)) |>
  # Filtering out male breast cancer
  filter(!(Sex == "Men" & Cancer_Site == "Breast")) |>
  # England doesn't have rates for men and women combined so have to filter this out
  filter(Sex != "All") |>
  # Arrange for joinpoint
  arrange(Cancer_Site, Country, Sex)


mortality_all <- rbind(mortality_england, mortality_scotland) |>
  rbind(mortality_wales) |>
  rbind(mortality_nireland)

mortality_all <- mortality_all |>
  mutate(
    
    Year = as.numeric(Year),
    
    # Cleaning and standardising site of cancer
    Cancer_Site = case_when(
      grepl(Cancer_Site, pattern = "All") ~ "All sites excl. NMSC",
      grepl(Cancer_Site, pattern = "Breast", ignore.case = T) ~ "Breast",
      grepl(Cancer_Site, pattern = "Colo|colo") ~ "Colorectal",
      grepl(Cancer_Site, pattern = "Lung|lung") ~ "Lung",
      grepl(Cancer_Site, pattern = "Oesophag", ignore.case = T) ~ "Oesophageal",
      grepl(Cancer_Site, pattern = "Pancrea", ignore.case = T) ~ "Pancreatic",
      grepl(Cancer_Site, pattern = "Prostate", ignore.case = T) ~ "Prostate",
      TRUE ~ NA),
    
    # Standardising Sex variable
    Sex = case_when(
      grepl(Sex, pattern = "female", ignore.case = T) ~ "Women",
      grepl(Sex, pattern = "male", ignore.case = T) ~ "Men",
      grepl(Sex, pattern = "All|Persons", ignore.case = T) ~ "All",
      TRUE ~ Sex),
    
    ASR = as.numeric(ASR)
    
    
  ) |>
  # Filtering for specified years
  # filter(between(Year, 2000, 2019)) |>
  # Filtering out COVID affected rates
  # filter(Year <= 2019) |>
  # Filtering out male breast cancer
  filter(!(Sex == "Men" & Cancer_Site == "Breast")) |>
  # England doesn't have rates for men and women combined so have to filter this out
  filter(Sex != "All") |>
  # Arrange for joinpoint
  arrange(Cancer_Site, Country, Sex)


```

### 3 year rolling cancer rates
```{r}

# Incidence
incidence_all_rolling <- incidence_all |>
  arrange(Year) |>
  group_by(Country, Sex, Cancer_Site) |>
  mutate(
    
    ASR_rolling = rollmean(ASR, k = 3, fill = NA)
    
    ) |>
  ungroup() |>
  filter(!is.na(ASR_rolling)) |>
  filter(between(Year, 2000, 2018)) |>
  arrange(Country, Cancer_Site, Sex, Year)


# Mortality
mortality_all_rolling <- mortality_all |>
  arrange(Year) |>
  group_by(Country, Sex, Cancer_Site) |>
  mutate(
    
    ASR_rolling = rollmean(ASR, k = 3, fill = NA)
    
    ) |>
  ungroup() |>
  filter(!is.na(ASR_rolling)) |>
  filter(between(Year, 2000, 2018)) |>
  arrange(Country, Cancer_Site, Sex, Year)


```

## Outputting Data
```{r}

# Write risk factor data to output
write.csv(output, paste0(output_filepath, "Risk_Factor_Data.csv"), row.names = F)

# Write cancer rate data to output
write.csv(incidence_all, paste0(output_filepath, "Cancer_Incidence_Data.csv"), row.names = F)
write.csv(incidence_all_rolling, paste0(output_filepath, "Cancer_Incidence_Data_Rolling.csv"), row.names = F)
write.csv(mortality_all, paste0(output_filepath, "Cancer_Mortality_Data.csv"), row.names = F)
write.csv(mortality_all_rolling, paste0(output_filepath, "Cancer_Mortality_Data_Rolling.csv"), row.names = F)


```
