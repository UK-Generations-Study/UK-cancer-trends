---
title: "Position Paper"
format: 
  html:
    toc: true
    toc-depth: 5
    grid:
      sidebar-width: 300px
      body-width: 2000px
      margin-width: 300px
      gutter-width: 1.5rem
editor: 
  mode: source
execute:
  warning: false
---

## Packages

```{r}
# lapply(paste0('package:', names(sessionInfo()$otherPkgs)), detach, character.only=TRUE, unload=TRUE)

library(dplyr)
library(readxl)
library(tidyr)
library(purrr)
library(ggplot2)
library(scales)
library(RColorBrewer)
library(stringr)
library(paletteer)
library(fontawesome)
library(gt)
```

## Setup

```{r, setup}
# knitr::opts_knit$set(root.dir = "C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/Position Paper/Data")
knitr::opts_knit$set(root.dir = "C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Data")
knitr::opts_chunk$set(echo = FALSE)
theme_set(theme_minimal())
```

## Function - Main

```{r}
## Main function that grabs data depending on source and calls specific cleaning function,
data_hub <- function(country, rf){
  
  # country <- "Wales"
  # 
  # rf <- "E_Cigarette"
  
  data <- list()
  
  sheets <- excel_sheets(paste0(rf, "_Data.xlsx"))
  
  spec_sheets <- sheets[grepl(sheets, pattern = country)]
  
  if(country == "England"){
    for(sheet in spec_sheets){
      nocol <- ncol(read_excel(paste0(rf, "_Data.xlsx"), sheet = sheet))
      tempdata <- read_excel(paste0(rf, "_Data.xlsx"), sheet = sheet, col_types = c("text", rep("numeric", nocol-1)))
      group <- gsub(x = sheet, pattern = "England_", replacement = "")
      data[[paste0(rf, "-", country, "-", sheet)]] <- pull_HSE_data(data = tempdata, group = group)
      data[[paste0(rf, "-", country, "-", sheet)]]$section <- rf
    }
  } else if(country == "Scotland"){
    for(sheet in spec_sheets){
      tempdata <- read_excel(paste0(rf, "_Data.xlsx"), sheet = sheet)
      group <- gsub(x = sheet, pattern = "Scotland_", replacement = "")
      data[[paste0(rf, "-", country, "-", sheet)]] <- pull_SHS_data(data = tempdata, group = group)
          data[[paste0(rf, "-", country, "-", sheet)]]$section <- rf
    }
  } else if(country == "Wales"){
    for(sheet in spec_sheets){
      tempdata <- read_excel(paste0(rf, "_Data.xlsx"), sheet = sheet)
      group <- gsub(x = sheet, pattern = "Wales_", replacement = "")
      data[[paste0(rf, "-", country, "-", sheet)]] <- pull_NSW_data(data = tempdata, group = group)
      data[[paste0(rf, "-", country, "-", sheet)]]$section <- rf

    }
  } else if(country == "NIreland" & rf != "Activity"){
    for(sheet in spec_sheets){
      tempdata <- read_excel(paste0(rf, "_Data.xlsx"), sheet = sheet)
      group <- gsub(x = sheet, pattern = "NIreland_", replacement = "")
      data[[paste0(rf, "-", country, "-", sheet)]] <- pull_HSNI_data(data = tempdata, group = group)
      data[[paste0(rf, "-", country, "-", sheet)]]$variable <- get_variable_HSNI(rf)
      data[[paste0(rf, "-", country, "-", sheet)]]$section <- rf
    }
    # Activity data formatted differently than other N. Ireland data so need different formatting.
  } else if(country == "NIreland" & rf == "Activity"){
    
    tempdata <- read_excel(paste0(rf, "_Data.xlsx"), sheet = "NIreland_Men")
    group <- "Men"
    data[["Activity-NIreland-Men"]] <- pull_HSNI_data_alt(data = tempdata, group = "Men")
    # data[["Activity-NIreland-Men"]]$variable <- get_variable_HSNI(rf)
    data[["Activity-NIreland-Men"]]$section <- rf
    
    tempdata <- read_excel(paste0(rf, "_Data.xlsx"), sheet = "NIreland_Women")
    group <- "Women"
    data[["Activity-NIreland-Women"]] <- pull_HSNI_data_alt(data = tempdata, group = "Women")
    # data[["Activity-NIreland-Women"]]$variable <- get_variable_HSNI(rf)
    data[["Activity-NIreland-Women"]]$section <- rf

    
    tempdata <- read_excel(paste0(rf, "_Data.xlsx"), sheet = "NIreland_All")
    group <- "All"
    data[["Activity-NIreland-All"]] <- pull_HSNI_data(data = tempdata, group = "All")
    data[["Activity-NIreland-All"]]$variable <- get_variable_HSNI(rf)
    data[["Activity-NIreland-All"]]$section <- rf
    
  } else {
    return(cat("ERROR"))
  }
  
  return(data)
}

```

## Function - England Health Survey

```{r}

pull_HSE_data <- function(data, group){
  
  # Edit for activity data format
  if(is.na(data[2,2])){
    data <- data[-1,]
  }
  
  # Remove weighted bases - can alter to keep
  if("Weighted bases" %in% data$...1){
    data <- data[1:(which(data$`...1`=="Weighted bases")-1),]
  } else if("Bases (weighted)" %in% data$...1){
    data <- data[1:(which(data$`...1`=="Bases (weighted)")-1),]
  }
  
  # Get cat columns
  ranges <- data$...1[is.na(data[,2])]
  rangesdif <- diff(which(is.na(data[,2])))
  
  # All groups should have the same number of categories - if not we need to throw an error
  if(max(rangesdif) != min(rangesdif)){
    return(cat("ERROR: Inconsistent Data Format"))
  }
  
  data <- data |>
    mutate(age_group = rep(ranges, each = rangesdif[1])) |>
    filter(!`...1` %in% ranges) |>
    pivot_longer(cols = colnames(data)[2:ncol(data)]) |>
    rename(year = name, variable = `...1`)
  
  data[["country"]] <- "England"
  data[["group"]] <- group
  
  ## Smoking data for some reason is ordered oppositely, so made quick fix here.
  ## Not ideal fix but will do for temporary purposes.
  if("Current cigarette smoker" %in% data[["age_group"]] | "Currently uses e-cigarettes" %in% data[["age_group"]] ){
    data <- data |>
      rename(temp_age = variable, temp_var = age_group) |>
      rename(age_group = temp_age, variable = temp_var)
  }
  
  return(data)
  
}

```

## Function - Alt England Health Survey (Diabetes Data)

```{r}

pull_HSE_diabetes_data <- function(data, group){
  
  # browser()
  
  if("Weighted bases" %in% data$...1){
    data <- data[1:(which(data$`...1`=="Weighted bases")-1),]
  }
  
  colnames(data) <- c("age_group", colnames(data)[2:ncol(data)])
  
  data <- data[-1,]
  
  data <- data |>
    pivot_longer(cols = colnames(data)[2:ncol(data)]) |>
    rename(year = name)
  
  data[["country"]] <- "England"
  data[["group"]] <- group
  data[["variable"]] <- "% Diabetes"
  
  return(data)
  
}

```

## Function - Scottish Health Survey

```{r}

pull_SHS_data <- function(data, group){
  
  if(group == "Sex"){
    data <- data |>
      select(year = Year, country = Geographylevel, variable = Categories, 
             group = Sex, value = Percent) |>
      mutate(age_group = "16+")
  } else if(group == "Age"){
    data <- data |>
      select(year = Year, country = Geographylevel, 
             variable = Categories, value = Percent, age_group = Age) |>
      mutate(group = "All adults")
  }
  
  return(data)
  
}
```

## Function - National Survey for Wales

```{r}

pull_NSW_data <- function(data, group){

  year_input <- group

  # data <- read_excel("E_Cigarette_Data.xlsx", sheet = "Wales_2017_2018")
  
  data <- as.data.frame(t(as.matrix(data, dimnames = NULL)))
  
  rownames(data) <- NULL
  
  data[data=="."] <- NA
  
  data <- data |>
    mutate(V2 = case_when(
      is.na(V2) ~ V1,
      TRUE ~ V2
    ), V3 = case_when(
      is.na(V3) ~ V2,
      TRUE ~ V3
    )) |>
    select(-V1, -V2)
  
  colnames(data) <- c("age_group", data[2,2:ncol(data)])
  
  data <- data[-c(1,2),]
  
  
  data <- data |>
    mutate(group = rep(c("All", "Men", "Women"), each = 11),
           year = year_input,
           country = "Wales") |>
    pivot_longer(cols = colnames(data)[2:ncol(data)]) |>
    rename(variable = name)
  
  return(data)
}
```

## Function - Health Survey Northern Ireland

```{r}
pull_HSNI_data <- function(data, group){
  
  # data <- read_excel("Activity_Data.xlsx", sheet = "NIreland_Men")

  # group <- "Males"
  
  colnames(data)[1] <- "age_group"
  
  data <-  data |>
    pivot_longer(cols = colnames(data)[2:ncol(data)]) |>
    rename(year = name) |>
    mutate(country = "N. Ireland",
           group = {{group}})
  
  return(data)
}

# Activity data is different, so need a slightly different function to take care of this special case
pull_HSNI_data_alt <- function(data, group){
  
  # data <- read_excel("Activity_Data.xlsx", sheet = "NIreland_Men")

  # group <- "Males"
  
  colnames(data)[1] <- "variable"
  
  data <-  data |>
    pivot_longer(cols = colnames(data)[2:ncol(data)]) |>
    rename(year = name) |>
    mutate(country = "N. Ireland",
           group = {{group}},
           age_group = "19+") # Table specifies 19+ participants.
  
  return(data)
}

# HSNI doesn't store variable information, so it must be inferred from the section.
# For alcohol etc, drinking over guidelines is from an _alt dataset which is treated seperately. 
get_variable_HSNI <- function(rf){
  section <- rf
  variable <- case_when(
    section == "BMI" ~ "Overweight",
    section == "Alcohol" ~ "Drink",
    section == "Smoking" ~ "Smoke",
    section == "E_Cigarette" ~ "E-Cigarette Use",
    section == "Activity" ~ "Meets Recommendations",
    TRUE ~ "ERROR"
  )
}
```

## Grabbing First Round of Data

Grabbing data where all sources are similar.

```{r, echo = F}
risk_factors <- c("BMI", "Alcohol", "E_Cigarette", "Smoking", "Activity")
countries <- c("England", "Scotland", "Wales", "NIreland")

data <- data.frame(section = character(0), variable = character(0), country = character(0), year = numeric(0),
                   group = character(0), age_group = character(0), value = numeric(0))

# Cycling through risk factors and countries, appending cleaned data from the sources to a main dataset.
for(rf in risk_factors){
  for(country in countries){
    new_data <- bind_rows(data_hub(country, rf))
    data <- rbind(data, new_data)
  }
}


```

## Cleaning Data

Cleaning some specific variables as well as cleaning variable names for variables needed in analysis.

```{r}

data2 <- data |>
  mutate(year = case_when(
    # Choosing first year when there are two 2017/18, may chance depending on future approach.
    grepl(year, pattern = "\\/") ~ map_chr(strsplit(year, "/"), 1),
    grepl(year, pattern = "\\_") ~ map_chr(strsplit(year, "_"), 1),
    TRUE ~ year
  ), 
  year = as.numeric(year),
  age_group = case_when(
    age_group %in% c("All men", "All women", "All", "All adults", "Total") ~ "16+",
    grepl(age_group, pattern = "Age ") ~ gsub(age_group, pattern = "Age ", replacement = ""),
    grepl(age_group, pattern = " years") ~ gsub(age_group, pattern = " years", replacement = ""),
    grepl(age_group, pattern = "All adults ") ~ gsub(age_group, pattern = "All adults ", replacement = ""),
    grepl(age_group, pattern = "All aged ") ~ gsub(age_group, pattern = "All aged ", replacement = ""),
    TRUE ~ age_group
  ), age_group = case_when(
    # Expections to all being 16+
    country == "N. Ireland" & section == "Alcohol" ~ gsub(age_group, pattern = "16", replacement = "18"),
    country == "N. Ireland" & section == "Activity" ~ gsub(age_group, pattern = "16", replacement = "19"),
    TRUE ~ age_group
  ), variable = case_when(
    # Harmonising variable names. Only doing ones we are focussed on. Could always expand to a fully harmonised dataset.
    # NOTE: as shown below, the naming of overweight/obesity variables can get confusing - when renaming manually, 'Overweight' refers to Overweight + Obese.
    country == "England" & section == "BMI" & variable == "Overweight including obese" & grepl(group, pattern = "Children") ~ "% Overweight",
    country == "England" & section == "BMI" & variable == "Obese" & grepl(group, pattern = "Children") ~ "% Obese",
    country == "England" & section == "BMI" & variable == "% overweight including obese" & !grepl(group, pattern = "Children") ~ "% Overweight",
    country == "England" & section == "BMI" & variable == "% obese" & !grepl(group, pattern = "Children") ~ "% Obese",
    country == "England" & section == "BMI" & variable == "% overweight" ~ "% overweight not obese",
    country == "England" & section == "Alcohol" & variable == "% non drinker/did not drink in last 12 months" ~ "% Non-Drinker",
    country == "England" & section == "Smoking" & variable == "Current cigarette smoker" ~ "% Current Smoker",
    country == "England" & section == "E_Cigarette" & variable == "Currently uses e-cigarettes" ~ "% Current E-cigarette user",
    country == "England" & section == "Activity" & variable %in% c("Meets aerobic guidelines") ~ "% Meets Guidelines",
  
    country == "Scotland" & section == "BMI" & variable == "Overweight (including obesity)" ~ "% Overweight",
    country == "Scotland" & section == "Alcohol" & variable == "Non-drinker" ~ "% Non-Drinker",
    country == "Scotland" & section == "Smoking" & variable == "Current smoker" ~ "% Current Smoker",
    country == "Scotland" & section == "E_Cigarette" & variable == "Currently using" ~ "% Current E-cigarette user",
    country == "Scotland" & section == "Activity" & variable == "Meets recommendations" ~ "% Meets Guidelines",
    
    country == "Wales" & section == "BMI" & variable == "BMI 25+ (overweight or obese)" ~ "% Overweight",
    country == "Wales" & section == "BMI" & variable == "BMI 30+ (obese)" ~ "% Obese",
    country == "Wales" & section == "Alcohol" & variable == "Average weekly alcohol consumption - none (may include some people who do sometimes drink)" ~ "% Non-Drinker",
    country == "Wales" & section == "Smoking" & variable == "Smoker" ~ "% Current Smoker",
    country == "Wales" & section == "E_Cigarette" & variable == "E-cigarette user" ~ "% Current E-cigarette user",
    country == "Wales" & section == "Activity" & variable == "Active at least 150 minutes in previous week" ~ "% Meets Guidelines",
    
    country == "N. Ireland" & section == "BMI" & variable == "Overweight" ~ "% Overweight",
    country == "N. Ireland" & section == "Alcohol" & variable == "Drink" ~ "% Non-Drinker", # NOTE: This is not technically accurate but next code block rectifies.
    country == "N. Ireland" & section == "Smoking" & variable == "Smoke" ~ "% Current Smoker",
    country == "N. Ireland" & section == "E_Cigarette" & variable == "E-Cigarette Use" ~ "% Current E-cigarette user",
    country == "N. Ireland" & section == "Activity" & variable %in% c("Meets Recommendations", "Meets recommendations") ~ "% Meets Guidelines",
    
    TRUE ~ variable

  ))

# Need to recitfy Ireland Alcohol variable for Non-Drinkers and Ireland's data is 0-1 scale which is altered.
data3 <-  data2 |>
  mutate(value = as.numeric(value),
         value = case_when(
    country == "N. Ireland" & section == "Alcohol" & variable == "% Non-Drinker" ~ 1 - value,
    TRUE ~ value
  ), value = case_when(
    country == "N. Ireland" ~ 100 * value,
    TRUE ~ value
  ))

# ## Need to group England overweight values together.
# 
# # england_overweight <- data3 |>
# #   filter(country == "England" & section == "BMI" & !grepl(group, pattern = "Children")) |>
# #   pivot_wider(names_from = variable, values_from = value) |>
# #   mutate(`% Overweight` = `% overweight including obese`) |>
# #   pivot_longer(cols = c(unique(data3$variable[data3$country == "England" & data3$section == "BMI" & !grepl(data3$group, pattern = "Children")]), "% Overweight")) |>
# #   rename(variable = name)
# 
# # data4 <- data3 |>
# #   # filter(!(country == "England" & section == "BMI" & !grepl(group, pattern = "Children"))) |>
# #   mutate(variable = case_when(
# #     country == "England" & section == "BMI" & variable == "Overweight including obese" & grepl(group, pattern = "Children") ~ "% Overweight",
# #     country == "England" & section == "BMI" & variable == "% overweight including obese" & !grepl(group, pattern = "Children") ~ "% Overweight",
# #     TRUE ~ variable
# #   )) # |>
#   # rbind(england_overweight)
# 
# data4 <- data3

```

## Adding Wales Health Survey Data

Can also add inactivity to this data if need be. Currently have it omitted as not requested for any graphs.

have shifted year forwards for years e.g. 2005/06 --\> 2006. This is not the same as for other Wales data, but continuity seemed more likely than a missing year.

```{r}
whs_data <- read_excel("Wales_Health_Survey_Data.xlsx")

names_to_pivot <- colnames(whs_data)[-c(1,2)]

whs_data <- whs_data |>
  filter(!is.na(...2)) |>
  mutate(across(.cols = !contains("..."), .fns = as.numeric)) |>
  mutate(group = rep(c("Men", "Women", "All"), each = 12)) |>
  rename(year = ...2) |>
  select(-...1) |>
  pivot_longer(cols = all_of(names_to_pivot)) |>
  rename(variable = name) |>
  filter(!is.na(value)) |>
  mutate(
    
    age_group = "16+",
    
    # Choosing a section for the variables we want to export - not all are applicable
    section = case_when(
      variable == "Smoker (1)" ~ "Smoking",
      variable == "Currently use an e-cigarette (2)" ~ "E_Cigarette",
      variable == "Overweight or obese (9)" ~ "BMI",
      variable == "Obese (10)" ~ "BMI",
      variable == "Exercise or physical activity done (new questions): Active for 150 minutes or more in the previous week (8)" ~ "Activity",
      variable == "Exercise or physical activity done (new questions): Active for less than 30 minutes in the previous week (8)" ~ "Activity",
      TRUE ~ NA),
    
    # Linking variables to pre established variable names
    variable = case_when(
      section == "Smoking" ~ "% Current Smoker",
      section == "E_Cigarette" ~ "% Current E-cigarette user",
      section == "BMI" & variable == "Overweight or obese (9)" ~ "% Overweight",
      section == "BMI" & variable == "Obese (10)" ~ "% Obese",
      section == "Activity" & variable == "Exercise or physical activity done (new questions): Active for 150 minutes or more in the previous week (8)" ~ "% Meets Guidelines",
      TRUE ~ NA),
    
    country = "Wales",
    
    # Choosing the later year for consistency with NSW data, which I believe is a continuation
    year = if_else(grepl(year, pattern = "\\/"), as.numeric(str_sub(year, start = 1, end = 4))+1, as.numeric(year))
    
    ) |>
  
  filter(!is.na(variable))

# Adding the Wales data to the main dataset
data4 <- data3 |>
  rbind(whs_data)


```

## Overweight

This plot contains data for Overweight + Obese data. The nomenclature can be inconsistent. In this markdown, I will write Overweight to mean above healthy weight, and will write overweight not obese to specify the specific BMI band for overweight.

```{r}

# Filter for variable groups we want to plot
plot_data <- data4 |>
  filter(variable == "% Overweight" & age_group == "16+" & grepl(group, pattern = "All"))

# Plot segregated by country
plot_data |>
  ggplot(aes(x = year, y = value, colour = country)) +
  geom_line() +
  geom_point() +
  xlab("Year") +
  ylab("% Overweight") +
  ggtitle("% Overweight in Adults") +
  labs(colour =  "Country") +
  scale_x_continuous(breaks = min(plot_data$year):max(plot_data$year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())

```

## Overweight (and Obese) by Age England

```{r}

# Need to use weightings from the data set to calculate % Obese for 25+ age range.
weightings <- read_excel("BMI_Data.xlsx", sheet = "England_All")

# Cleaning weightings data
top_row <- which(weightings$...1 == "Weighted bases")
weightings <-weightings[(top_row+1):nrow(weightings),]

weightings <- as.data.frame(weightings)


weightings <- weightings |>
  filter(!...1 %in% c("All adults", "16-24 years"))

for(i in 2:ncol(weightings)){
  weightings[,i] <- weightings[,i]/sum(weightings[,i])
}

weightings <- as.data.frame(t(as.matrix(weightings)))

weightings <- weightings |>
  mutate(Year = rownames(weightings))

rownames(weightings) <- NULL
colnames(weightings) <- weightings[1,]
weightings <- weightings[-1,]

weightings <- weightings |>
  rename(year = ...1) |>
  sapply(as.numeric)

# Create new range using weights
adult_bmi_england <- data4 |>
  filter(country == "England" & section == "BMI" & variable == "% Overweight" & group == "All" & !grepl(age_group, pattern = "16")) |>
  pivot_wider(names_from = age_group, values_from = value) |>
  merge(weightings, by = "year") |>
  # Vector multiply by the normalised weightings to get an accurate value for 25+ age group
  mutate(`25+` = `25-34`*`25-34 years` + `35-44`*`35-44 years` + `45-54`*`45-54 years` + `55-64`*`55-64 years` + `65-74`*`65-74 years` + `75+`*`75+ years`) |>
  select(year, variable, country, group, section, `25+`) |>
  pivot_longer(cols = `25+`) |>
  rename(age_group = name) |>
  filter(year != 2005) # NOTE: this year has an issue with the sampling weights so is omitted at this step.

# Isolate the unaffected age groups and merge back in the new age group
age_bmi_england <- data4 |>
  filter(country == "England" & section == "BMI" & variable == "% Overweight" & group %in% c("All", "Children_All") & age_group %in% c("16-24", "2-10", "11-15")) |>
  rbind(adult_bmi_england)

# Plot the data
ggplot(data = age_bmi_england, aes(x = year, y = value, colour = factor(age_group, levels = c("2-10", "11-15", "16-24", "25+")))) +
  geom_point() +
  geom_line() +
  xlab("Year") +
  ylab("% Overweight or Obese") +
  ggtitle("% Overweight or Obese in England") +
  labs(colour =  "Age Group", caption = "*Overweight for those aged >15 as BMI > 25\nOverweight for those aged <= 15 as at or above the 85th BMI percentile in the UK") +
  scale_x_continuous(breaks = 2002:2022, limits = c(2002, 2022)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())

# Save plot
ggsave("C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Position Paper Plots/Overweight_or_Obese_by_Age.png", bg = "white")

```

## Obese

```{r}
obese_data <- data4

# Scotland BMI data collected was on Overweight so need to adjust and add Obesity data from a seperate source
obese_data_sheets <- excel_sheets("BMI_Obese_Data.xlsx")

scotland_sheets <- obese_data_sheets[grepl(obese_data_sheets, pattern = "Scotland")]

# Loop over sheets for age and sex and add both to total dataset used for this specific variable.
for(sheet in scotland_sheets){
  
  # Read sheet and clean
  tempdata <- read_excel("BMI_Obese_Data.xlsx", sheet = sheet)
  group <- gsub(x = sheet, pattern = "Scotland_", replacement = "")
  tempdata <- pull_SHS_data(data = tempdata, group = group)
  tempdata$section <- "BMI"
  tempdata$variable <- ifelse(tempdata$variable == "Obesity", "% Obese", "% Non-Obese")
  
  # Merge into obese_data
  obese_data <- rbind(obese_data, tempdata)

}
 # Similar to Scotland data, needed to extract specific information on Obesity for N. Ireland as initial data collected was only Overweight %
nireland_sheets <- obese_data_sheets[grepl(obese_data_sheets, pattern = "NIreland")]

# Loop over sheets for sexes and add both to total dataset used for this specific variable.
for(sheet in nireland_sheets){
  
  # Read in sheet and clean
  tempdata <- read_excel(paste0("BMI_Obese_Data.xlsx"), sheet = sheet)
  group <- gsub(x = sheet, pattern = "NIreland_", replacement = "")
  tempdata <- pull_HSNI_data(data = tempdata, group = group)
  tempdata$variable <- "% Obese"
  tempdata$section <- "BMI"
  tempdata$value <- 100*tempdata$value
  tempdata$year = as.numeric(map_chr(strsplit(tempdata$year, "/"), 1))
  tempdata$age_group = if_else(tempdata$age_group == "Total", "16+", tempdata$age_group)
  
  # Merge into obese data
  obese_data <- rbind(obese_data, tempdata)
}

# Filter data for specific variable and groups we want to plot and plotting
plot_data <- obese_data |>
  filter(variable == "% Obese" & age_group %in% c("16+", "Total") & grepl(group, pattern = "All"))

plot_data |>
  ggplot(aes(x = year, y = value, colour = country)) +
  geom_line() +
  geom_point() +
  xlab("Year") +
  ylab("% Obese") +
  ggtitle("% Obese in Adults") +
  labs(colour =  "Country") +
  scale_x_continuous(breaks = min(plot_data$year):max(plot_data$year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())


```

## Overweight not Obese by Sex

```{r, fig.height = 10, fig.width = 7}

# Need to create variable for Overweight not Obese. 
plot_data <- obese_data |>
  filter(section == "BMI") |>
  pivot_wider(names_from = variable, values_from = value) |>
  mutate(
    
    `% Overweight not Obese` = case_when(
      country == "England" ~ `% overweight not obese`,
      country == "Scotland" ~ `% Overweight` - `% Obese`,
      country == "Wales" & year >2015 ~ `BMI 25 - under 30 (overweight but not obese)`,
      country == "Wales" & year <=2015 ~ `% Overweight` - `% Obese`,
      country == "N. Ireland" ~ `% Overweight` - `% Obese`),
    
    # Making sex naming consistent
    group = case_when(
      group == "Male" ~ "Men",
      group == "Female" ~ "Women",
      TRUE ~ group)
    
    ) |>
  filter(group %in% c("Men", "Women"), age_group == "16+")

# Plotting, with a facet_wrap for sex
plot_data |>
  ggplot(aes(x = year, y = `% Overweight not Obese`, colour = country)) +
  geom_point() +
  geom_line() +
  xlab("Year") +
  ylab("% Overweight not Obese") +
  ggtitle("% Overweight not Obese in Adults") +
  labs(colour =  "Country") +
  scale_x_continuous(breaks = 2002:2022, limits = c(2002, 2022)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank()) +
  facet_wrap(~group,scales = "fixed", dir = "v")
  
# Save plot
ggsave("C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Position Paper Plots/Overweight_not_Obese_by_Sex.png", bg = "white")


```

## Overweight not Obese by Age England

```{r}

# Similar to above, but only concerned with England so only need to adjust for differences in naming between children and adult datasets
plot_data <- obese_data |>
  filter(section == "BMI", country == "England") |>
  pivot_wider(names_from = variable, values_from = value) |>
  mutate(
    
    `% Overweight not Obese` = case_when(
      grepl(group, pattern = "Children") ~ Overweight,
      TRUE ~ `% overweight not obese`)
    
  ) |>
  filter(group %in% c("Children_All", "All"), age_group %in% c("2-10", "11-15", "16-24", "25-34", "35-44", "45-54", "55-64", "65-74", "75+")) |>
  select(age_group, year, `% Overweight not Obese`)

## Need to merge the age groups above 25 into one group
weightings <- read_excel("BMI_Data.xlsx", sheet = "England_All")

top_row <- which(weightings$...1 == "Weighted bases")
weightings <-weightings[(top_row+1):nrow(weightings),]

weightings <- as.data.frame(weightings)


weightings <- weightings |>
  filter(!...1 %in% c("All adults", "16-24 years"))

for(i in 2:ncol(weightings)){
  weightings[,i] <- weightings[,i]/sum(weightings[,i])
}

weightings <- as.data.frame(t(as.matrix(weightings)))

weightings <- weightings |>
  mutate(Year = rownames(weightings))

rownames(weightings) <- NULL
colnames(weightings) <- weightings[1,]
weightings <- weightings[-1,]

weightings <- weightings |>
  rename(year = ...1) |>
  sapply(as.numeric)

adult_bmi_england <- plot_data |>
  filter(age_group %in% c("25-34", "35-44", "45-54", "55-64", "65-74", "75+")) |>
  pivot_wider(names_from = age_group, values_from = `% Overweight not Obese`) |>
  merge(weightings, by = "year") |>
  mutate(`25+` = `25-34`*`25-34 years` + `35-44`*`35-44 years` + `45-54`*`45-54 years` + `55-64`*`55-64 years` + `65-74`*`65-74 years` + `75+`*`75+ years`) |>
  select(year, `25+`) |>
  pivot_longer(cols = `25+`) |>
  rename(age_group = name, `% Overweight not Obese` = value)  |>
  filter(year != 2005) # NOTE: this year has an issue with the sampling weights so is ommitted at this step.

## Now merge in new 25+ data back into the plot_data and plot

plot_data <- plot_data |>
  filter(age_group %in% c("2-10", "11-15", "16-24")) |>
  rbind(adult_bmi_england)

plot_data |>
  ggplot(aes(x = year, y = `% Overweight not Obese`, colour = factor(age_group, levels = c("2-10", "11-15", "16-24", "25+")))) +
  geom_point() +
  geom_line() +
  xlab("Year") +
  ylab("% Overweight not Obese") +
  ggtitle("% Overweight not Obese in England") +
  labs(colour =  "Age Group", caption = "*Overweight for those aged >15 as 25 < BMI < 30\nOverweight for those aged <= 15 as at or above the 85th BMI percentile\nbut below the 95th BMI percentile in the UK") +
  scale_x_continuous(breaks = 2002:2022, limits = c(2002, 2022)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())

# Save plot
ggsave("C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Position Paper Plots/Overweight_not_Obese_by_Age.png", bg = "white")

```

## Obese by Sex

```{r, fig.height = 10, fig.width = 7}

# Filter to necessary data
plot_data <- obese_data |>
  filter(variable == "% Obese" & age_group %in% c("16+", "Total") & !grepl(group, pattern = "All"))

# Normalise to one way of labelling sex
plot_data |>
  mutate(
  
  group = case_when(
    group == "Male" ~ "Men",
    group == "Female" ~ "Women",
    TRUE ~ group)
  
  ) |>
  ggplot(aes(x = year, y = value, colour = country)) +
  geom_line() +
  geom_point() +
  xlab("Year") +
  ylab("% Obese") +
  ggtitle("% Obese in Adults") +
  labs(colour =  "Country") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank()) +
  facet_wrap(~group,scales = "fixed", dir = "v") +
  scale_x_continuous(breaks = 2002:2022, limits = c(2002, 2022))


# Save plot
ggsave("C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Position Paper Plots/Obese_by_Sex.png", width = 8, height = 9, bg = "white")

```

## Obese by Age - England

```{r}
# Need to use weightings from the data set to calculate % Obese for 25+ age range.
weightings <- read_excel("BMI_Data.xlsx", sheet = "England_All")

top_row <- which(weightings$...1 == "Weighted bases")
weightings <-weightings[(top_row+1):nrow(weightings),]

weightings <- as.data.frame(weightings)


weightings <- weightings |>
  filter(!...1 %in% c("All adults", "16-24 years"))

for(i in 2:ncol(weightings)){
  weightings[,i] <- weightings[,i]/sum(weightings[,i])
}

weightings <- as.data.frame(t(as.matrix(weightings)))

weightings <- weightings |>
  mutate(Year = rownames(weightings))

rownames(weightings) <- NULL
colnames(weightings) <- weightings[1,]
weightings <- weightings[-1,]

weightings <- weightings |>
  rename(year = ...1) |>
  sapply(as.numeric)

adult_bmi_england <- data4 |>
  filter(country == "England" & section == "BMI" & variable == "% Obese" & group == "All" & !grepl(age_group, pattern = "16")) |>
  pivot_wider(names_from = age_group, values_from = value) |>
  merge(weightings, by = "year") |>
  # Vector multiply by the normalised weightings to get an accurate value for 25+ age group
  mutate(`25+` = `25-34`*`25-34 years` + `35-44`*`35-44 years` + `45-54`*`45-54 years` + `55-64`*`55-64 years` + `65-74`*`65-74 years` + `75+`*`75+ years`) |>
  select(year, variable, country, group, section, `25+`) |>
  pivot_longer(cols = `25+`) |>
  rename(age_group = name) |>
  filter(year != 2005) # NOTE: this year has an issue with the sampling weights so is ommitted at this step.

# Isolate the unaffected age groups and merge back in the new age group
age_bmi_england <- data4 |>
  filter(country == "England" & section == "BMI" & variable == "% Obese" & group %in% c("All", "Children_All") & age_group %in% c("16-24", "2-10", "11-15")) |>
  rbind(adult_bmi_england)

# For presentation: Only considering two youngest groups
age_bmi_england <- age_bmi_england |>
  filter(age_group %in% c("2-10", "11-15"))

# Plot the data
ggplot(data = age_bmi_england, aes(x = year, y = value, colour = factor(age_group, levels = c("2-10", "11-15", "16-24", "25+")))) +
  geom_point() +
  geom_line() +
  xlab("Year") +
  ylab("% Obese") +
  ggtitle("% Obese in England") +
  labs(colour =  "Age Group", caption = "*Obese for those aged >15 as BMI > 30\nObese for those aged <= 15 as at or above the 95th BMI percentile in the UK") +
  scale_color_brewer(palette="Set2") +
  scale_x_continuous(breaks = 2002:2022, limits = c(2002, 2022)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())

# Save plot
ggsave("C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Position Paper Plots/Obese_by_Age.png", width = 8, height = 4.5, bg = "white")

```

## Childhood Obesity - NCMP

Childhood obesity as measured by the National Child Measurement Program

```{r}

reception_BMI_data <- read_excel("BMI_Data_Children.xlsx", sheet = "England_Reception")

reception_BMI_data <- as.data.frame(t(as.matrix(reception_BMI_data)))

colnames(reception_BMI_data) <- c("variable", "var2", "REMOVE", reception_BMI_data[1,4:ncol(reception_BMI_data)])
reception_BMI_data <- reception_BMI_data |>
  filter(row_number()>1 & row_number()<nrow(reception_BMI_data)) |>
  mutate(variable = rep(reception_BMI_data$variable[!is.na(reception_BMI_data$variable)], each = 5)) |>
  filter(var2 == "Prevalence") |>
  select(-REMOVE, -var2, -Reception) |>
  pivot_longer(cols = colnames(reception_BMI_data)[grepl(colnames(reception_BMI_data), pattern = "20")]) |>
  mutate(year = as.numeric(substr(name, start = 1, stop = 4)),
         age_group = "4-5")

yr6_BMI_data <- read_excel("BMI_Data_Children.xlsx", sheet = "England_Year_6")

yr6_BMI_data <- as.data.frame(t(as.matrix(yr6_BMI_data)))

colnames(yr6_BMI_data) <- c("variable", "var2", "REMOVE", yr6_BMI_data[1,4:ncol(yr6_BMI_data)])
yr6_BMI_data <- yr6_BMI_data |>
  filter(row_number()>1 & row_number()<nrow(yr6_BMI_data)) |>
  mutate(variable = rep(yr6_BMI_data$variable[!is.na(yr6_BMI_data$variable)], each = 5)) |>
  filter(var2 == "Prevalence") |>
  select(-REMOVE, -var2, -`Year 6`) |>
  pivot_longer(cols = colnames(yr6_BMI_data)[grepl(colnames(yr6_BMI_data), pattern = "20")]) |>
  mutate(year = as.numeric(substr(name, start = 1, stop = 4)),
         age_group = "10-11")

children_BMI_data <- rbind(reception_BMI_data, yr6_BMI_data)

plot_data <- children_BMI_data |>
  filter(variable == "Obesity (including severe obesity)") |>
  filter(year != 2020) |> # They noted 2020 as having a smaller sample and needing weighting so we have excluded it here.
  mutate(value = as.numeric(value))

plot_data |>
  ggplot(aes(x = year, y = value, colour = age_group)) +
  geom_point() +
  geom_line() +
  xlab("Year") +
  ylab("% Obese") +
  ggtitle("% Obese in England  - Children") +
  labs(colour =  "Age Group") +
  scale_x_continuous(breaks = min(plot_data$year):max(plot_data$year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())
  

```

## Alcohol

```{r}

plot_data <- data4 |>
  filter(variable == "% Non-Drinker" & age_group %in% c("16+", "18+") & grepl(group, pattern = "All")) |>
  mutate(value = 100- value)

plot_data |>
  ggplot(aes(x = year, y = value, colour = country)) +
  geom_line() +
  geom_point() +
  xlab("Year") +
  ylab("% Current Drinker") +
  ggtitle("% Current Drinker in Adults*") +
  labs(colour =  "Country", caption = "*Adult for England, Scotland and Wales defined as 16+, and for N. Ireland as 18+") +
  scale_x_continuous(breaks = min(plot_data$year):max(plot_data$year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())


```

## Alcohol - Guidelines

Needed to get guidelines data for N. Ireland seperately, as well as combine variables for England data to get a Drinking over Guidelines value.

```{r}

guidelines_england <- data4 |>
  filter(country == "England" & section == "Alcohol"& grepl(group, pattern = "All")) |>
  pivot_wider(names_from = variable, values_from = value) |>
  mutate(`% Over Guidelines` = 100 - (`% Non-Drinker` + `% up to 14 units per week`)) |>
  pivot_longer(cols = c(unique(data4$variable[data4$country == "England" & data4$section == "Alcohol" & grepl(data4$group, pattern = "All")]), "% Over Guidelines")) |>
  rename(variable = name)

alcohol_data <- data4 |>
  filter(!(country == "England" & section == "Alcohol"& grepl(group, pattern = "All"))) |>
  rbind(guidelines_england) |>
  mutate(variable = case_when(
    country == "Scotland" & section == "Alcohol" & variable == "Hazardous/Harmful drinker" ~ "% Over Guidelines",
    country == "Wales" & section == "Alcohol" & variable == "Average weekly alcohol consumption - above 14 units (over guidelines)" ~ "% Over Guidelines",
    TRUE ~ variable
  ))

new_alcohol_sheets <- excel_sheets("Alcohol_Data_Alt.xlsx")
for(sheet in new_alcohol_sheets){
  tempdata <- read_excel(paste0("Alcohol_Data_Alt.xlsx"), sheet = sheet)
  group <- gsub(x = sheet, pattern = "NIreland_", replacement = "")
  tempdata <- pull_HSNI_data(data = tempdata, group = group)
  tempdata$variable <- "% Over Guidelines"
  tempdata$section <- "Alcohol"
  tempdata$value <- 100*tempdata$value
  
  alcohol_data <- rbind(alcohol_data, tempdata)
}

plot_data <- alcohol_data |>
  filter(variable == "% Over Guidelines" & group == "All" & age_group %in% c("16+", "Total")) |>
  mutate(year = case_when(
    grepl(year, pattern = "\\/") ~ map_chr(strsplit(year, "/"), 1),
    TRUE ~ year
  )) 

plot_data |>
  ggplot(aes(x = as.numeric(year), y = value, colour = country)) +
  geom_line() +
  geom_point() +
  xlab("Year") +
  ylab("% Over Alcohol Guidelines") +
  ggtitle("% Over Alcohol Guidelines in Adults") +
  labs(colour =  "Country") +
  scale_x_continuous(breaks = min(plot_data$year):max(plot_data$year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())
```

## Alcohol - Guidelines by Age

```{r}

guidelines_england <- data4 |>
  filter(country == "England" & section == "Alcohol"& grepl(group, pattern = "All")) |>
  pivot_wider(names_from = variable, values_from = value) |>
  mutate(`% Over Guidelines` = 100 - (`% Non-Drinker` + `% up to 14 units per week`)) |>
  pivot_longer(cols = c(unique(data4$variable[data4$country == "England" & data4$section == "Alcohol" & grepl(data4$group, pattern = "All")]), "% Over Guidelines")) |>
  rename(variable = name)

# Need to use weightings from the data set to calculate % Obese for 25+ age range.
weightings <- read_excel("Alcohol_Data.xlsx", sheet = "England_All")

top_row <- which(weightings$...1 == "Weighted bases")
weightings <-weightings[(top_row+1):nrow(weightings),]

weightings <- as.data.frame(weightings)


weightings <- weightings |>
  filter(!...1 %in% c("All adults", "16-24 years"))

for(i in 2:ncol(weightings)){
  weightings[,i] <- weightings[,i]/sum(weightings[,i])
}

weightings <- as.data.frame(t(as.matrix(weightings)))

weightings <- weightings |>
  mutate(Year = rownames(weightings))

rownames(weightings) <- NULL
colnames(weightings) <- weightings[1,]
weightings <- weightings[-1,]

weightings <- weightings |>
  rename(year = ...1) |>
  sapply(as.numeric)

adult_alcohol_england <- guidelines_england |>
  filter(variable == "% Over Guidelines" & !grepl(age_group, pattern = "16")) |>
  pivot_wider(names_from = age_group, values_from = value) |>
  merge(weightings, by = "year") |>
  mutate(`25+` = `25-34`*`25-34 years` + `35-44`*`35-44 years` + `45-54`*`45-54 years` + `55-64`*`55-64 years` + `65-74`*`65-74 years` + `75+`*`75+ years`) |>
  select(year, variable, country, group, section, `25+`) |>
  pivot_longer(cols = `25+`) |>
  rename(age_group = name)

age_alcohol_england <- guidelines_england |>
  filter(variable == "% Over Guidelines" & age_group %in% c("16-24")) |>
  rbind(adult_alcohol_england)

plot_data <- age_alcohol_england

plot_data |>
  ggplot(aes(x = year, y = value, colour = age_group)) +
  geom_point() +
  geom_line() +
  xlab("Year") +
  ylab("% Over Guidelines") +
  ggtitle("% Over Guidelines in England") +
  labs(colour =  "Age Group") +
  scale_x_continuous(breaks = min(plot_data$year):max(plot_data$year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())

```

## Alcohol - Guidelines by Sex

```{r, fig.height = 10, fig.width = 7}

# First need to get over guidelines amount from England data by combining variables
guidelines_england <- data4 |>
  filter(country == "England" & section == "Alcohol"& !grepl(group, pattern = "All")) |>
  pivot_wider(names_from = variable, values_from = value) |>
  mutate(`% Over Guidelines` = 100 - (`% Non-Drinker` + `% up to 14 units per week (lower risk)`)) |>
  pivot_longer(cols = c(unique(data4$variable[data4$country == "England" & data4$section == "Alcohol" & !grepl(data4$group, pattern = "All")]), "% Over Guidelines")) |>
  rename(variable = name) |>
  filter(variable == "% Over Guidelines")

# Merge in the data not from England and make some adjustments to the data before plotting it
plot_data <- alcohol_data |>
  filter(country != "England" & variable == "% Over Guidelines" & !grepl(group, pattern = "All")) |>
  mutate(group = case_when(
    group == "Male" ~ "Men",
    group == "Female" ~ "Women",
    TRUE ~ group
  ), year = case_when(
  grepl(year, pattern = "\\/") ~ map_chr(strsplit(year, "/"), 1),
    TRUE ~ year),
  year = as.numeric(year)) |>
  rbind(guidelines_england) |>
  filter(age_group %in% c("Total", "16+"))

plot_data |>
  ggplot(aes(x = year, y = value, colour = country)) +
  geom_line() +
  geom_point() +
  xlab("Year") +
  ylab("% Drinking Over Guidelines") +
  ggtitle("% Drinking Over Guidelines in Adults") +
  labs(colour =  "Country",
       caption = "*Adult is defined as 16+ in England, Scotland and Wales and 18+ in N. Ireland") +
  scale_x_continuous(breaks = 2002:2022, limits = c(2002,2022)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank()) +
  facet_wrap(~group, scales = "fixed", dir = "v")

# Save plot
ggsave("C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Position Paper Plots/Alcohol_Over_Guidelines_by_Sex.png", bg = "white")

```

## Smoking

```{r}

plot_data <- data4 |>
  filter(variable == "% Current Smoker" & age_group == "16+" & grepl(group, pattern = "All")) 

plot_data |>
  ggplot(aes(x = year, y = value, colour = country)) +
  geom_line() +
  geom_point() +
  xlab("Year") +
  ylab("% Current Smoker") +
  ggtitle("% Current Smoker in Adults") +
  labs(colour =  "Country") +
  scale_x_continuous(breaks = min(plot_data$year):max(plot_data$year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())
```

## Smoking by Sex

```{r, fig.height = 10, fig.width = 7}
# Plotting by sex
plot_data <- data4 |>
  filter(variable == "% Current Smoker" & age_group == "16+" & !grepl(group, pattern = "All")) |>
  mutate(group = case_when(
    group == "Male" ~ "Men",
    group == "Female" ~ "Women",
    TRUE ~ group
  ))

plot_data |>
  ggplot(aes(x = year, y = value, colour = country)) +
  geom_line() +
  geom_point() +
  xlab("Year") +
  ylab("% Current Smoker") +
  ggtitle("% Current Smoker in Adults") +
  labs(colour =  "Country") +
  scale_x_continuous(breaks = 2002:2022, limits = c(2002,2022)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank()) +
  facet_wrap(~group, scales = "fixed", dir = "v")

# Save plot
ggsave("C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Position Paper Plots/Smoking_by_Sex.png", width = 8, height = 9, bg = "white")

```

## Smoking by Age

```{r}
# Importing weightings
weightings <- read_excel("Smoking_Data.xlsx", sheet = "England_All")

top_row <- which(weightings$...1 == "Weighted bases")
weightings <-weightings[(top_row+1):nrow(weightings),]

weightings <- as.data.frame(weightings)

weightings <- weightings |>
  filter(!...1 %in% c("All adults", "16-24 years"))

# Normalising weights for each year
for(i in 2:ncol(weightings)){
  weightings[,i] <- weightings[,i]/sum(weightings[,i])
}

weightings <- as.data.frame(t(as.matrix(weightings)))

weightings <- weightings |>
  mutate(Year = rownames(weightings))

rownames(weightings) <- NULL
colnames(weightings) <- weightings[1,]
weightings <- weightings[-1,]

weightings <- weightings |>
  rename(year = ...1) |>
  sapply(as.numeric)

# Getting data and pivoting out age groups
adult_smoking_england <- data4 |>
  filter(variable == "% Current Smoker" & !grepl(age_group, pattern = "16") & country == "England" & group == "All") |>
  pivot_wider(names_from = age_group, values_from = value) |>
  
  # Merging to get year specific weightings
  merge(weightings, by = "year") |>
  
  # Merging age groups >24 by using the weights
  mutate(`25+` = `25-34`*`25-34 years` + `35-44`*`35-44 years` + `45-54`*`45-54 years` + `55-64`*`55-64 years` + `65-74`*`65-74 years` + `75+`*`75+ years`) |>
  select(year, variable, country, group, section, `25+`) |>
  pivot_longer(cols = `25+`) |>
  rename(age_group = name)

# Taking 16-24 age group and merging in the created 25+ variable
age_smoking_england <- data4 |>
  filter(variable == "% Current Smoker" & country == "England" & group == "All" & age_group %in% c("16-24")) |>
  rbind(adult_smoking_england)

plot_data <- age_smoking_england

# Plotting by age groups

plot_data |>
  ggplot(aes(x = year, y = value, colour = age_group)) +
  geom_point() +
  geom_line() +
  xlab("Year") +
  ylab("% Current Smoker") +
  ggtitle("% Current Smoker in England") +
  labs(colour =  "Age Group") +
  scale_x_continuous(breaks = min(plot_data$year):max(plot_data$year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())

```

## E-Cigarette

```{r}
# Plotting pre-cleaned data
plot_data <- data4 |>
  filter(variable == "% Current E-cigarette user" & age_group == "16+" & grepl(group, pattern = "All"))

plot_data |>
  ggplot(aes(x = year, y = value, colour = country)) +
  geom_line() +
  geom_point() +
  xlab("Year") +
  ylab("% Current E-Cigarette Users") +
  ggtitle("% Current E-Cigarette Users in Adults") +
  labs(colour =  "Country") +
  scale_x_continuous(breaks = min(plot_data$year):max(plot_data$year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())

# Initialising colours for plot
cols <- colorRampPalette(brewer.pal(n = 8, name = "Greens")[4:8])(7)

# Cleaning age group labels and plotting by age group
plot_data <- data4 |>
  filter(variable == "% Current E-cigarette user" & grepl(group, pattern = "All") & country == "England" & age_group != "16+") |>
  mutate(age_start = as.numeric(substr(age_group, 1, 2)), 
         age_end = ifelse(grepl(age_group, pattern = "\\+"), age_start, as.numeric(substr(age_group, 4, 5))),
         age_use = 0.5*(age_start + age_end)) 

plot_data |>
  ggplot(aes(x = year, y = value, colour = as.factor(age_group))) +
  geom_line() +
  geom_point() +
  xlab("Age") +
  ylab("% Current E-Cigarette Users") +
  ggtitle("% Current E-Cigarette Users in England") +
  labs(colour =  "Age Group") +
  scale_x_continuous(breaks = min(plot_data$year):max(plot_data$year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank()) +
  scale_color_manual(values = cols)
```

## E-Cigarette - Great Britain

More years available - but concerns about different questionnaire structure.

```{r}

# Reading in UK wide data
ecig_data <- read_excel("E_Cigarette_Data.xlsx", sheet = "Great_Britain_All")

# Merging Daily and Occaisonal Users to one group then cleaning to make age group clearer
ecig_data <- ecig_data |>
  pivot_longer(cols = colnames(ecig_data)[3:ncol(ecig_data)]) |>
  pivot_wider(names_from = `Proportion of population aged 16 years and over by e-cigarette use [note 1]`, values_from = value) |>
  mutate(`% User` = `Daily user (%)` + `Occasional user (%)`) |>
  select(Year, name, `% User`) |>
  separate(col = name, sep = " \r\naged \r\n", into = c("group", "age_group")) |>
  mutate(Year = as.integer(Year), 
         age_group = case_when(
           grepl(age_group, pattern = " to ") ~ gsub(age_group, pattern = " to ", replacement = "-"),
           grepl(age_group, pattern = " and over") ~ gsub(age_group, pattern = " and over", replacement = "+"),
           TRUE ~ age_group
         ))

# Initial plot for all people
plot_data <- ecig_data |>
  filter(group == "All persons", age_group == "16+")

plot_data |>
  ggplot(aes(x = Year, y = `% User`)) +
  geom_line() +
  geom_point() +
  ylab("% Current E-Cigarette Users") +
  ggtitle("% Current E-Cigarette Users in Great Britain") +
  scale_x_continuous(breaks = min(plot_data$Year):max(plot_data$Year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank()) +
  ylim(5, 10)

# Save plot
ggsave("C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Position Paper Plots/E_Cigarette_Usage_GB.png", width = 8, height = 4.5, bg = "white")

# Initialising colours for next plot
cols <- brewer.pal(n = 8, name = "Greys")[4:8]

# Plotting by age group
plot_data <- ecig_data |>
  filter(!age_group %in% c("16+"), group == "All persons") 

plot_data |>
  ggplot(aes(x = Year, y = `% User`, colour = age_group)) +
  geom_line() +
  geom_point() +
  ylab("% Current E-Cigarette Users") +
  ggtitle("% Current E-Cigarette Users in Great Britain") +
  labs(colour = "Age Group") +
  scale_color_manual(values = cols) +
  scale_x_continuous(breaks = min(plot_data$Year):max(plot_data$Year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())

```

## E-Cigarette (Regular User) Great Britain by Age

Greys look quite hard to read here - maybe consider choosing a specific colour.

```{r}
# Reading in UK wide data
ecig_data <- read_excel("E_Cigarette_Data.xlsx", sheet = "Great_Britain_All")


ecig_data <- ecig_data |>
  pivot_longer(cols = colnames(ecig_data)[3:ncol(ecig_data)]) |>
  pivot_wider(names_from = `Proportion of population aged 16 years and over by e-cigarette use [note 1]`, values_from = value) |>
  mutate(`% User` = `Daily user (%)` + `Occasional user (%)`) |>
  separate(col = name, sep = " \r\naged \r\n", into = c("group", "age_group")) |>
  mutate(Year = as.integer(Year), 
         age_group = case_when(
           grepl(age_group, pattern = " to ") ~ gsub(age_group, pattern = " to ", replacement = "-"),
           grepl(age_group, pattern = " and over") ~ gsub(age_group, pattern = " and over", replacement = "+"),
           TRUE ~ age_group
         ))


# Initialising colours for next plot
cols <- brewer.pal(n = 7, name = "Greys")[3:7]

# Plotting by age group
plot_data <- ecig_data |>
  filter(!age_group %in% c("16+"), group == "All persons") 

plot_data |>
  ggplot(aes(x = Year, y = `Daily user (%)`, colour = age_group)) +
  geom_line() +
  geom_point() +
  ylab("% Current Regular E-Cigarette Users") +
  ggtitle("% Current Regular E-Cigarette Users in Great Britain") +
  labs(colour = "Age Group") +
  scale_color_manual(values = cols) +
  scale_x_continuous(breaks = min(plot_data$Year):max(plot_data$Year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())

# Save plot
ggsave("C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Position Paper Plots/E_Cigarette_Usage_by_Age.png", bg = "white")
```

## E-Cigarette - Great Britain by Sex

```{r}

plot_data <- ecig_data |>
  filter(age_group %in% c("16+"), group != "All persons") 

plot_data |>
  ggplot(aes(x = Year, y = `% User`, colour = group)) +
  geom_line() +
  geom_point() +
  ylab("% Current E-Cigarette Users") +
  ggtitle("% Current E-Cigarette Users in Great Britain") +
  labs(colour = "Sex") +
  scale_x_continuous(breaks = min(plot_data$Year):max(plot_data$Year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())

```

## Activity

Added a new source for the activity that provides more years. The Welsh definition is slightly differently worded, check up on this.

```{r}
# Plotting pre-cleaned data for activity

plot_data <- data4 |>
  filter(variable == "% Meets Guidelines" & age_group %in% c("16+") & grepl(group, pattern = "All") |
           variable == "% Meets Guidelines" & age_group %in% c("19+") & grepl(group, pattern = "All") & country == "N. Ireland")

plot_data |>
  ggplot(aes(x = year, y = value, colour = country)) +
  geom_line() +
  geom_point() +
  xlab("Year") +
  ylab("% Meets Activity Guidelines") +
  ggtitle("% Meets Activity Guidelines in Adults*") +
  labs(colour =  "Country", caption = "*Adult for England, Scotland and Wales defined as 16+, and for N. Ireland as 19+\nActivity guidelines are >150 mins Moderate Physical Activity") +
  scale_x_continuous(breaks = min(plot_data$year):max(plot_data$year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())

# Adding alternative data source for England

activity_england <- read_excel("Activity_Alt_Data.xlsx")

# Cleaning data to conform to structure of data4

activity_england <- activity_england |>
  rename(variable = ...1) |>
  pivot_longer(cols = colnames(activity_england[2:ncol(activity_england)])) |>
  rename(year = name) |>
  mutate(year = gsub(year, pattern = "Nov ", replacement = "")) |>
  mutate(year = as.numeric(paste0("20", substr(year, start = 1, stop = 2))),
         value = 100*as.numeric(value),
         variable = case_when(
           variable == "Active: at least 150 minutes a week" ~ "% Meets Guidelines",
           TRUE ~ variable
         ), age_group = "16+",
         group = "All",
         country = "England",
         section = "Activity") |>
  filter(variable == "% Meets Guidelines")

# Filtering out old source for England and adding the new source

plot_data <- data4 |>
  filter(variable == "% Meets Guidelines" & age_group %in% c("16+") & grepl(group, pattern = "All") & country != "England" |
           variable == "% Meets Guidelines" & age_group %in% c("19+") & grepl(group, pattern = "All") & country == "N. Ireland") |>
  rbind(activity_england)

plot_data |>
  ggplot(aes(x = year, y = value, colour = country)) +
  geom_line() +
  geom_point() +
  xlab("Year") +
  ylab("% Meets Activity Guidelines") +
  ggtitle("% Meets Activity Guidelines in Adults*") +
  labs(colour =  "Country", caption = "*Adult for England, Scotland and Wales defined as 16+, and for N. Ireland as 19+\nActivity guidelines are >150 mins Moderate Physical Activity") +
  scale_x_continuous(breaks = min(plot_data$year):max(plot_data$year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())

```

## Activity by Sex

Need to note here that activity for Wales is strictly 150mins whereas the other countries allow for the intensity of the exercise to vary the guidelines.

```{r, fig.height = 10, fig.width = 7}
plot_data <- data4 |>
  filter(variable == "% Meets Guidelines" & age_group %in% c("16+") & !grepl(group, pattern = "All") |
           variable == "% Meets Guidelines" & age_group %in% c("19+") & !grepl(group, pattern = "All") & country == "N. Ireland") |>
  mutate(group = case_when(
    group == "Male" ~ "Men",
    group == "Female" ~ "Women",
    TRUE ~ group
  ))

plot_data |>
  ggplot(aes(x = year, y = value, colour = country)) +
  geom_line() +
  geom_point() +
  xlab("Year") +
  ylab("% Meets Activity Guidelines") +
  ggtitle("% Meets Activity Guidelines in Adults*") +
  labs(colour =  "Country", caption = "*Adult for England, Scotland and Wales defined as 16+, and for N. Ireland as 19+\nActivity guidelines are >150 mins Moderate Physical Activity") +
  scale_x_continuous(breaks = min(plot_data$year):max(plot_data$year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank()) +
  facet_wrap(~group, scales = "fixed", dir = "v")

# Save plot
ggsave("C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Position Paper Plots/Activity_by_Sex.png", bg = "white")

```

## Age First Birth Data

For this variable and all further, no data is contained in the pre sorted data, so all sourced from new sources. As with before, these sources have been documented in the README file.

```{r}

afb_data <- read_excel("Age_First_Birth_Data.xlsx")[2:3,13:31]

colnames(afb_data) <- afb_data[1,]
afb_data <- afb_data[2,]

plot_data <- afb_data |>
  pivot_longer(cols = colnames(afb_data)) |>
  mutate(Year = as.numeric(name), value = as.numeric(value)) 

plot_data |>
  ggplot(aes(x = Year, y = value)) +
  geom_line() +
  geom_point() +
  ylab("Average Age at First Birth") +
  ggtitle("Average Age at First Birth in UK") +
  scale_x_continuous(breaks = 2002:2022, limits = c(2002,2022)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank()) +
  ylim(25, 30)

# Save plot
ggsave("C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Position Paper Plots/Age_at_First_Birth.png", width = 8, height = 4.5, bg = "white")

```

## Parity by Birth Cohort

Currently only have data for England and Wales. Trying to track down data for other countries.

```{r}

# Plotting parity for birth cohorts

plot_data <- read_excel("Parity_Data.xlsx", sheet = "England_Wales_Parity") |>
  mutate(age = case_when(
    is.na(`Age exact years`) ~ 46,
    TRUE ~ `Age exact years`),
    `% Parous` = 100 - `0 (No children)`) |>
  group_by(`Year of birth of woman`) |>
  arrange(desc(age)) |>
  filter(row_number()==1) |>
  ungroup()

plot_data |>
  ggplot(aes(x = `Year of birth of woman`, y = `% Parous`)) +
  geom_line() +
  geom_point() +
  geom_vline(xintercept = max(plot_data$`Year of birth of woman`[plot_data$age==46])+0.5, linetype = "dashed", colour = "red") +
  xlab("Year of Birth") +
  labs(caption = "Dashed red line represents last full cohort (achieved age 46)") +
  scale_x_continuous(breaks = seq(min(plot_data$`Year of birth of woman`), max(plot_data$`Year of birth of woman`), by = 2)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())
```

## Parity by Year

```{r}
# Plotting total parity in England/Wales over time.

pop_data <- read_excel("Population_Data.xlsx") |>
  filter(Sex == "Females", Age != "All Ages") |>
  select(-Sex) 

pop_data <- as.data.frame(t(as.matrix(pop_data))) 

colnames(pop_data) <- pop_data[1,]
pop_data$year <- rownames(pop_data)
pop_data <- pop_data[-1,] |>
  mutate(year = gsub(year, pattern = "Mid-", replacement = "")) |>
  sapply(as.numeric)

pop_data <- as.data.frame(pop_data) |>
  filter(year>1970)

for(i in 1:nrow(pop_data)){
  pop_data[i,which(colnames(pop_data)!="year")] <- pop_data[i,which(colnames(pop_data)!="year")]/sum(pop_data[i,which(colnames(pop_data)!="year")])
}

pop_data <- pop_data |>
  pivot_longer(cols = colnames(pop_data)[colnames(pop_data)!="year"])

parity_data <- read_excel("Parity_Data.xlsx", sheet = "England_Wales_Parity") |>
  mutate(flag =  case_when(
    is.na(`Age exact years`) ~ "Final",
    TRUE ~ NA),
    parous = 100 - `0 (No children)`,
    YOB = as.numeric(`Year of birth of woman`),
    age = as.numeric(`Age exact years`),
    year = YOB + age)

parity <- data.frame(year = integer(0), parity = integer(0))
  
for(y in 2010:2022){
  tempdata <- as.data.frame(parity_data)
  tempdata$finalage <- ifelse(parity_data$flag=="Final", y - tempdata$YOB, NA)
  tempdata <- filter(tempdata, year == y|finalage>45)
  tempdata$age <- ifelse(is.na(tempdata$age), tempdata$finalage, tempdata$age)
  over90 <- mean(tempdata$parous[tempdata$age>89])
  tempdata <- tempdata[tempdata$age<90,]
  tempdata <- select(tempdata, age, parous)
  tempdata[nrow(tempdata)+1,] <- c("90+", over90)
  tempdata$parous <- as.numeric(tempdata$parous)
  temppop <- pop_data[pop_data$year==y,]
  df <- merge(tempdata, temppop, by.x = "age", by.y = "name")
  df$relpar <- df$parous*df$value
  parity[nrow(parity)+1,] <- c(y, sum(df$relpar))
}

plot_data <- parity

plot_data |>
  ggplot(aes(x = year, y = parity)) +
  geom_point() +
  geom_line() +
  ylab("Parity (%)") +
  xlab("Year") +
  ggtitle("Parity in England and Wales") +
  scale_x_continuous(breaks = 2002:2022, limits = c(2002,2022)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank()) +
  ylim(55, 57)

# Save plot
ggsave("C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Position Paper Plots/Parity_by_Year.png", width = 8, height = 4.5, bg = "white")

```

## Fertility Rates

```{r}

fertility_data <- read_excel("Parity_Data.xlsx", sheet = "England_Wales_Fertility") |>
  filter(Year>1989)

plot_data <- fertility_data

plot_data |>
  ggplot(aes(x = Year, y = `Live births per 1,000 women in age group\r\nAll ages`)) +
  geom_point() +
  geom_line() +
  ylab("Fertility Rates per 1,000") +
  ggtitle("Fertility in England and Wales") +
  scale_x_continuous(breaks = min(plot_data$Year):max(plot_data$Year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())

# heatmap_fertility <- fertility_data[,!grepl(colnames(fertility_data), pattern = "Age of mother")]
# 
# heatmap_fertility <- heatmap_fertility |>
#   pivot_longer(cols = colnames(heatmap_fertility)[-1]) |>
#   mutate(age_group = gsub(name, pattern = "Live births per 1,000 women in age group\r\n", replacement = "")) |>
#   filter(age_group != "All ages") |>
#   mutate(age_group = case_when(
#     grepl(age_group, pattern = "and over") ~ gsub(age_group, pattern = " and over", replacement = "+"),
#     grepl(age_group, pattern = "Under") ~ gsub(age_group, pattern = "Under ", replacement = "0 to "),
#     TRUE ~ age_group
#   ))
#   # group_by(age_group) |>
#   # mutate(value = (value - mean(value, na.rm = T))/sqrt(var(value, na.rm = T))) |>
#   # ungroup()
# 
# ggplot(heatmap_fertility, aes(x = age_group, y = Year, fill = value)) +
#   geom_tile() +
#   paletteer::scale_fill_paletteer_c("viridis::plasma") +
#   labs(fill = "Fertility Rate") +
#   xlab("Age Group") +
#   theme(legend.position = "bottom")


```

## HRT

```{r}

hrt_data <- read_excel("HRT_Data.xlsx") 

plot_data <- hrt_data |>
  mutate(Year = as.numeric(map_chr(strsplit(`Financial Year`, "/"), 1)), 
         `% HRT` = as.numeric(`Patients per 1,000 Population`)/1000) |>
  filter(!is.na(`% HRT`))

plot_data |>
  ggplot(aes(x = Year, y = `% HRT`)) +
  geom_line() +
  geom_point() +
  xlab("Year") +
  ylab("HRT (%)") +
  ggtitle("HRT Usage in England") +
  scale_x_continuous(breaks = min(plot_data$Year):max(plot_data$Year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank()) +
  ylim(20, 40)


# Save plot
ggsave("C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Position Paper Plots/HRT_Usage.png", width = 8, height = 4.5, bg = "white")


```

## Cancer - Globocan Data

```{r}
# Reading in data
cancer_england_wales <- read_excel("Cancer Trends/Globocan By Country/Cancer_Projection_Data_England_Wales.xlsx")
cancer_scotland <- read_excel("Cancer Trends/Globocan By Country/Cancer_Projection_Data_Scotland.xlsx")
cancer_nireland <- read_excel("Cancer Trends/Globocan By Country/Cancer_Projection_Data_NIreland.xlsx")

# Merging data and making sex and inc/mort variables clearer
cancer_data <- cancer_england_wales |>
  rbind(cancer_scotland) |>
  rbind(cancer_nireland) |>
  mutate(Sex = ifelse(Sex==1, "Male", "Female"),
         IncMort = ifelse(Type == 0, "Incidence", "Mortality"))

# Looping through sites and plotting cancer rates for that site
for(site in unique(cancer_data$`Cancer label`)){
  tempdata <- cancer_data[cancer_data$`Cancer label`==site,]
  tempdata <- tempdata[tempdata$Year>=1997,]
  # minyear <- min(tempdata$Year)
  minyear <- 1997
  maxyear <- max(tempdata$Year)
  print(ggplot(data = tempdata, aes(x = Year, y = `ASR (World)`, colour = `Country label`)) +
  geom_line() +
  geom_point() +
  # xlim(minyear, maxyear) +
  ggtitle(paste0("Cancer Rates for ", site)) +
  labs(colour = "Country") +
  theme(legend.position="bottom",legend.box = "vertical") +
  # scale_x_continuous(breaks = minyear:maxyear) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank()) +
  facet_grid(IncMort~ Sex, scales = "free_y") +
  scale_x_continuous(breaks = seq(minyear+1, maxyear, by = 2)))
  
  # Save plot
  ggsave(paste0("C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Position Paper Plots/Cancer_", site, "_Rates.png"), bg = "white")

}

```

## Cancer - Plotting Prostate and Breast together

```{r}

plot_data <- cancer_data |>
  filter(`Cancer label` %in% c("Prostate", "Breast")) |>
  filter(Year >= 1997)

plot_data |>
  ggplot(aes(x = Year, y = `ASR (World)`, colour = `Country label`)) +
  geom_line() +
  geom_point() +
  # xlim(minyear, maxyear) +
  ggtitle(paste0("Cancer Rates for Breast and Prostate Cancers")) +
  labs(colour = "Country") +
  theme(legend.position="bottom",legend.box = "vertical") +
  # scale_x_continuous(breaks = minyear:maxyear) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank()) +
  facet_grid(IncMort~ `Cancer label`, scales = "free_y") +
  scale_x_continuous(breaks = seq(1998, max(plot_data$Year), by = 2))
  
# Save plot
ggsave(paste0("C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Position Paper Plots/Cancer_Prostate_Breast_Rates.png"), bg = "white")

```

## Cancer Incidence - Globocan Data

```{r}
# Reading in data
cancer_england_wales <- read_excel("Cancer Trends/Globocan By Country/Cancer_Projection_Data_England_Wales.xlsx")
cancer_scotland <- read_excel("Cancer Trends/Globocan By Country/Cancer_Projection_Data_Scotland.xlsx")
cancer_nireland <- read_excel("Cancer Trends/Globocan By Country/Cancer_Projection_Data_NIreland.xlsx")

# Merging data and making sex and inc/mort variables clearer
cancer_data <- cancer_england_wales |>
  rbind(cancer_scotland) |>
  rbind(cancer_nireland) |>
  mutate(Sex = ifelse(Sex==1, "Male", "Female"),
         IncMort = ifelse(Type == 0, "Incidence", "Mortality"),
         `Cancer label` = ifelse(`Cancer label` == "All sites excl. non-melanoma skin cancer", "All Sites", `Cancer label`)) |>
  filter(IncMort == "Incidence") |>
  filter(Year >= 1997)


ggplot(data = cancer_data, aes(x = Year, y = `ASR (World)`, colour = `Country label`)) +
  geom_line() +
  geom_point() +
  ggtitle(paste0("Cancer Incidence Rates")) +
  labs(colour = "Country") +
  theme(legend.position="bottom",legend.box = "vertical") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank()) +
  facet_grid(`Cancer label` ~ Sex, scales = "free_y") +
  scale_x_continuous(breaks = seq(1998, max(cancer_data$Year), by = 2))

ggsave(paste0("C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Position Paper Plots/All Cancers Plot.png"), height = 16, width = 8, bg = "white")

```

## Diabetes

```{r}

# Initialise data
diabetes_data <- integer(0)

sheets <- excel_sheets("Diabetes_Data.xlsx")

# Go through England sheets and apply HSE specific function to clean the data
england_sheets <- sheets[grepl(sheets, pattern = "England")]

for(sheet in england_sheets){

  nocol <- ncol(read_excel("Diabetes_Data.xlsx", sheet = sheet))
  tempdata <- read_excel("Diabetes_Data.xlsx", sheet = sheet, col_types = c("text", rep("numeric", nocol-1)))
  group <- gsub(x = sheet, pattern = "England_", replacement = "")
  tempdata <- pull_HSE_diabetes_data(data = tempdata, group = group)
  tempdata$section <- "Diabetes"
  diabetes_data <- rbind(diabetes_data, tempdata)
        
}

# Go through Scotland sheets and apply SHS specific cleaning function
scotland_sheets <- sheets[grepl(sheets, pattern = "Scotland")]


for(sheet in scotland_sheets){
  tempdata <- read_excel("Diabetes_Data.xlsx", sheet = sheet)
  group <- gsub(x = sheet, pattern = "Scotland_", replacement = "")
  tempdata <- pull_SHS_data(data = tempdata, group = group)
  tempdata$section <- "Diabetes"
  tempdata$variable = ifelse(tempdata$variable == "Yes", "% Diabetes", "% No Diabetes")
  diabetes_data <- rbind(diabetes_data, tempdata)
}

# Reading in and manually cleaning the N. Ireland data
tempdata <- read_excel("Diabetes_Data.xlsx", sheet = "NIreland") 

tempdata <- tempdata |>
  pivot_longer(cols = colnames(tempdata)[2:ncol(tempdata)]) |>
  rename(year = name, section = `...1`) |>
  mutate(value = value/10) |>
  mutate(age_group = "17+", variable = "% Diabetes", group = "All", country = "N. Ireland")

# Merging all data together
diabetes_data <- rbind(diabetes_data, tempdata)

# Further cleaning and plotting
plot_data <- diabetes_data |>
  mutate(year = case_when(
    grepl(year, pattern = "\\/") ~ map_chr(strsplit(year, "/"), 1),
    TRUE ~ year),
    year = as.numeric(year),
  age_group = case_when(
    age_group %in% c("All men", "All women", "All", "All adults", "Total") ~ "16+",
    grepl(age_group, pattern = "Age ") ~ gsub(age_group, pattern = "Age ", replacement = ""),
    grepl(age_group, pattern = " years") ~ gsub(age_group, pattern = " years", replacement = ""),
    grepl(age_group, pattern = "All adults ") ~ gsub(age_group, pattern = "All adults ", replacement = ""),
    grepl(age_group, pattern = "All aged ") ~ gsub(age_group, pattern = "All aged ", replacement = ""),
    TRUE ~ age_group
  )) |>
  filter(variable == "% Diabetes" & age_group %in% c("16+", "17+") & grepl(group, pattern = "All"))


plot_data |>
  ggplot(aes(x = year, y = value, colour = country)) +
  geom_line() +
  geom_point() +
  xlab("Year") +
  ylab("% Diabetes") +
  ggtitle("% Diabetes in Adults") +
  labs(colour =  "Country", caption = "*Adult for England and Scotland defined as aged 16+, for N. Ireland defined as aged 17+.") +
  scale_x_continuous(breaks = min(plot_data$year):max(plot_data$year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())


```

## Diabetes by Sex

```{r, fig.height = 10, fig.width = 7}
plot_data <- diabetes_data |>
  mutate(year = case_when(
    grepl(year, pattern = "\\/") ~ map_chr(strsplit(year, "/"), 1),
    TRUE ~ year),
    year = as.numeric(year),
  age_group = case_when(
    age_group %in% c("All men", "All women", "All", "All adults", "Total") ~ "16+",
    grepl(age_group, pattern = "Age ") ~ gsub(age_group, pattern = "Age ", replacement = ""),
    grepl(age_group, pattern = " years") ~ gsub(age_group, pattern = " years", replacement = ""),
    grepl(age_group, pattern = "All adults ") ~ gsub(age_group, pattern = "All adults ", replacement = ""),
    grepl(age_group, pattern = "All aged ") ~ gsub(age_group, pattern = "All aged ", replacement = ""),
    TRUE ~ age_group
  )) |>
  filter(variable == "% Diabetes" & age_group %in% c("16+", "17+") & !grepl(group, pattern = "All")) |>
  mutate(group = case_when(
    group == "Male" ~ "Men",
    group == "Female" ~ "Women",
    TRUE ~ group
  )) 

plot_data |>
  ggplot(aes(x = year, y = value, colour = country)) +
  geom_line() +
  geom_point() +
  xlab("Year") +
  ylab("% Diabetes") +
  ggtitle("% Diabetes in Adults") +
  labs(colour =  "Country", caption = "*Adult for England and Scotland defined as aged 16+") +
  scale_x_continuous(breaks = 2002:2022, limits = c(2002, 2022)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank()) +
  facet_wrap(~group, scales = "fixed", dir = "v")
  
# Save plot
ggsave(paste0("C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Position Paper Plots/Diabetes_by_Sex.png"), bg = "white")

```

## Screening - Breast

```{r}
# Read in England data
screening_data_breast_england <- read_excel("Screening_Data.xlsx", sheet = "England_Breast_Uptake")

# Manipulate to useful structure
screening_data_breast_england <- screening_data_breast_england |>
  mutate(year = as.numeric(substr(`Time period`, start = 1, stop = 4))) |>
  select(year, value = Value) |>
  mutate(country = "England")

# Read in Scotland data
screening_data_breast_scotland <- read_excel("Screening_Data.xlsx", sheet = "Scotland_Breast_Uptake")

# Making structure match England data
screening_data_breast_scotland <- screening_data_breast_scotland |>
  pivot_longer(cols = colnames(screening_data_breast_scotland)[2:ncol(screening_data_breast_scotland)]) |>
  filter(`Type of invitation1` == "All routine invitations1") |>
  mutate(year = as.numeric(substr(name, start = 1, stop = 4))) |>
  select(value, year) |>
  mutate(country = "Scotland")

# Read in Wales data
screening_data_breast_wales <- read_excel("Screening_Data.xlsx", sheet = "Wales_Breast_Uptake")

# Match structure with England data
screening_data_breast_wales <- screening_data_breast_wales |>
  select(year = Year, value = Uptake) |>
  mutate(country = "Wales")

# Read in N. Ireland data
screening_data_breast_nireland <- read_excel("Screening_Data.xlsx", sheet = "NIreland_Breast_Uptake")

# Match structure with England data
screening_data_breast_nireland <- screening_data_breast_nireland |>
  select(year = Year, value = Uptake) |>
  mutate(country = "N. Ireland")

# Plotting
plot_data <- screening_data_breast_england |>
  rbind(screening_data_breast_scotland) |>
  rbind(screening_data_breast_wales) |>
  rbind(screening_data_breast_nireland)

plot_data |>
  ggplot(aes(x = year, y = value, colour = country)) +
  geom_line() +
  geom_point() +
  xlab("Year") +
  ylab("% Uptake") +
  labs(colour = "Country") +
  ggtitle("% Breast Screening Uptake") +
  scale_x_continuous(breaks = min(plot_data$year):max(plot_data$year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank()) +
  ylim(60,80)

# Save plot
ggsave(paste0("C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Position Paper Plots/Screening_Breast.png"), bg = "white")

```

## Screening - Bowel

```{r}

# Reading in data
screening_data_bowel_england <- read_excel("Screening_Data.xlsx", sheet = "England_Bowel_Coverage")

# Mutating data and plotting
plot_data <- screening_data_bowel_england |>
  mutate(Year = as.numeric(substr(`Time period`, start = 1, stop = 4))) 

plot_data |>
  ggplot(aes(x = Year, y = Value)) +
  geom_line() +
  geom_point() +
  xlab("Year") +
  ylab("% Coverage") +
  ggtitle("% Bowel Screening Coverage in England") +
  scale_x_continuous(breaks = min(plot_data$Year):max(plot_data$Year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())

# Reading in data - England
screening_data_bowel_england <- read_excel("Screening_Data.xlsx", sheet = "England_Bowel_Uptake")

# Mutating to simple columns
screening_data_bowel_england <- screening_data_bowel_england |>
  mutate(year = as.numeric(substr(`Time period`, start = 1, stop = 4))) |>
  select(year, value = Value) |>
  mutate(country = "England")

# Reading in data - Scotland
screening_data_bowel_scotland <- read_excel("Screening_Data.xlsx", sheet = "Scotland_Bowel_Uptake")

# Matching columns of England data
screening_data_bowel_scotland <- screening_data_bowel_scotland |>
  pivot_longer(cols = colnames(screening_data_bowel_scotland)[2:ncol(screening_data_bowel_scotland)]) |>
  filter(...1 == "All persons") |>
  mutate(year = as.numeric(substr(name, start = 1, stop = 4))) |>
  select(year, value) |>
  mutate(country = "Scotland")

# Reading in data - Wales
screening_data_bowel_wales <- read_excel("Screening_Data.xlsx", sheet = "Wales_Bowel_Uptake")

# Matching columns of England data
screening_data_bowel_wales <- screening_data_bowel_wales |>
  select(year = Year, value = Uptake) |>
  mutate(country = "Wales")

# Reading in data - N. Ireland
screening_data_bowel_nireland <- read_excel("Screening_Data.xlsx", sheet = "NIreland_Bowel_Uptake")

# Matching columns of England data
screening_data_bowel_nireland <- screening_data_bowel_nireland |>
  select(year = Year, value = Uptake) |>
  mutate(country = "N. Ireland")

# Merging and plotting
plot_data <- screening_data_bowel_england |>
  rbind(screening_data_bowel_scotland)|>
  rbind(screening_data_bowel_wales) |>
  rbind(screening_data_bowel_nireland)

plot_data |>
  ggplot(aes(x = year, y = value, colour = country)) +
  geom_line() +
  geom_point() +
  xlab("Year") +
  ylab("% Uptake") +
  labs(colour = "Country") +
  ggtitle("% Bowel Screening Uptake") +
  scale_x_continuous(breaks = min(plot_data$year):max(plot_data$year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())

# Save plot
ggsave(paste0("C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Position Paper Plots/Screening_Bowel.png"), bg = "white")

```

## Screening - Breast + Bowel Uptake

```{r, fig.height = 10, fig.width = 7}

bowel_screening_data <- screening_data_bowel_england |>
  rbind(screening_data_bowel_scotland)|>
  rbind(screening_data_bowel_wales) |>
  rbind(screening_data_bowel_nireland) |>
  mutate(Location = "Bowel")

breast_screening_data <- screening_data_breast_england |>
  rbind(screening_data_breast_scotland) |>
  rbind(screening_data_breast_wales) |>
  rbind(screening_data_breast_nireland) |>
  mutate(Location = "Breast")

plot_data <- bowel_screening_data |>
  rbind(breast_screening_data)

plot_data |>
  ggplot(aes(x = year, y = value, colour = country)) +
  # scale_colour_manual(values = c("England" = "#FF7676FF", "Scotland" = "#75B7D1FF", "Wales" = "#F9D662FF", "N. Ireland" = "#7CAB7DFF")) +
  geom_line() +
  geom_point() +
  xlab("Year") +
  ylab("% Uptake") +
  labs(colour = "Country") +
  ggtitle("% Screening Uptake") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank()) +
  facet_wrap(~Location, scales = "fixed", dir = "v") +
  scale_x_continuous(breaks = 2002:2022, limits = c(2002, 2022))


# Save plot
ggsave(paste0("C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Position Paper Plots/Screening_by_Location.png"), bg = "white")

```

## Screening - Cervix

```{r}

screening_data_cervix <- read_excel("Screening_Data.xlsx", sheet = "England_Cervix")

plot_data <- screening_data_cervix |>
  filter(...1 == "Coverage (25-64)") |>
  select(-units) |>
  pivot_longer(cols = colnames(screening_data_cervix)[substr(colnames(screening_data_cervix), start = 1, stop = 2) == "20"]) |>
  mutate(Year = as.numeric(name)) 

plot_data |>
  ggplot(aes(x = Year, y = value)) +
  geom_line() +
  geom_point() +
  xlab("Year") +
  ylab("% Coverage") +
  ggtitle("% Cervix Screening Coverage in England") +
  scale_x_continuous(breaks = min(plot_data$Year):max(plot_data$Year)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major.x = element_line(color = "grey92", size = 0.5),  # Adjust grid lines
        panel.grid.minor.x = element_blank())
```


## Create dataframe for JoinPoint
```{r}

# Create obesity % data for joinpoint
obese_data_jp <- obese_data |>
  filter(variable == "% Obese", age_group == "16+") |>
  mutate(
    group = case_when(
      group == "Male" ~ "Men",
      group == "Female" ~ "Women",
      TRUE ~ group)
  )

# Create alcohol over guidelines % data for joinpoint
alcohol_data_jp <- alcohol_data |>
  rbind(guidelines_england) |> # Need to merge in data for england by sex
  filter(variable == "% Over Guidelines"  & age_group %in% c("16+", "Total") & group != "All adults") |>
  mutate(
    
    year = case_when(
      grepl(year, pattern = "\\/") ~ map_chr(strsplit(year, "/"), 1),
      TRUE ~ year),
    
    group = case_when(
      group == "Male" ~ "Men",
      group == "Female" ~ "Women",
      TRUE ~ group)
    
    )

# Create smoking % data for joinpoint
smoking_data_jp <- data4 |>
  filter(variable == "% Current Smoker" & age_group == "16+" & group != "All adults") |>
  mutate(group = case_when(
    group == "Male" ~ "Men",
    group == "Female" ~ "Women",
    TRUE ~ group
  ))

# Create E-Cigarette data for joinpoint
ecig_data_jp <- ecig_data |>
  select(year = Year, group, age_group, value = `% User`) |>
  filter(age_group == "16+") |>
  mutate(
    group = if_else(group == "All persons", "All", group),
    
    variable = "% Current User",
    
    country = "Great Britain",
    
    section = "E Cigarette"
  )

# Create activity data for joinpoint
activity_data_jp <- data4 |>
  filter((variable == "% Meets Guidelines" & age_group %in% c("16+") & group != "All adults") |
           (variable == "% Meets Guidelines" & age_group %in% c("19+") & country == "N. Ireland")) |>
  mutate(group = case_when(
    group == "Male" ~ "Men",
    group == "Female" ~ "Women",
    TRUE ~ group
  ))

# Create age at first birth data for joinpoint
afb_data_jp <- afb_data |>
  pivot_longer(cols = colnames(afb_data)) |>
  mutate(year = as.numeric(name), value = as.numeric(value)) |>
  select(-name) |>
  mutate(
    
    country = "UK",
    
    section = "Parity",
    
    variable = "Age at First Birth",
    
    group = "Women",
    
    age_group = "All"
    
  )

# Create parity data for joinpoint
parity_data_jp <- parity |>
  mutate(
    
    country = "England and Wales",
    
    group = "Women",
    
    age_group = "All",
    
    section = "Parity",
    
    variable = "% Parity"
    
  ) |>
  rename(value = parity)


# Create HRT data for joinpoint
hrt_data_jp <- hrt_data |>
  mutate(year = as.numeric(map_chr(strsplit(`Financial Year`, "/"), 1)), 
         value = as.numeric(`Patients per 1,000 Population`)/10) |>
  filter(!is.na(value)) |>
  select(year, value) |>
  mutate(
    
    country = "England",
    
    group = "All", # Data doesn't specify
    
    age_group = "All",
    
    variable = "% HRT",
    
    section = "HRT"
    
  )


# Create diabetes data for joinpoint
diabetes_data_jp <- diabetes_data |>
  mutate(age_group = if_else(age_group %in% c("All men", "All women", "All adults"), "16+", age_group)) |> # 16+ is correct for all adults as shown by minimum age group for England data being 16-24
  filter(age_group == "16+") |>
  mutate(group = case_when(
    group == "Male" ~ "Men",
    group == "Female" ~ "Women",
    TRUE ~ group)
  ) |>
  filter(variable == "% Diabetes")


# Create breast screening data for joinpoint
breast_screening_data_jp <- breast_screening_data |>
  select(-Location) |>
  mutate(
    
    variable = "% Uptake",
    
    section = "Breast Screening",
    
    age_group = "Valid", # Could examine each one to find exact age groups - but purpose of this is how it varies, including due to age groups that are valid for the screening
    
    group = "Women"
    
  )


# Create bowel screening data for joinpoint
bowel_screening_data_jp <- bowel_screening_data |>
  select(-Location) |>
  mutate(
    
    variable = "% Uptake",
    
    section = "Bowel Screening",
    
    age_group = "Valid", # Could examine each one to find exact age groups - but purpose of this is how it varies, including due to age groups that are valid for the screening
    
    group = "All"
    
  )


# Combine all variable sections together and create "section - variable" variable for uniqueness
data_jp <- obese_data_jp |>
  rbind(alcohol_data_jp) |>
  rbind(smoking_data_jp) |>
  rbind(ecig_data_jp) |>
  rbind(activity_data_jp) |>
  # rbind(afb_data_jp) |> # This should not be with the rest of the risk factors - this is not a percentage!
  rbind(parity_data_jp) |>
  rbind(hrt_data_jp) |>
  rbind(diabetes_data_jp) |>
  rbind(breast_screening_data_jp) |>
  rbind(bowel_screening_data_jp) |>
  mutate(
    
    `section - variable` = paste0(section, " - ", variable),
    
    year = as.numeric(year)
    
  ) |>
  arrange(`section - variable`, country, group, age_group, year)


# Write as .csv to be exported to joinpoint
write.csv(data_jp, r"(C:\Users\rfrost\OneDrive - The Institute of Cancer Research\Documents\UK-cancer-trends\Data\Risk_Factor_Data_Joinpoint.csv)")


```

## Plot joinpoint output
```{r}

data_jp_output <- read.delim(r"(C:\Users\rfrost\OneDrive - The Institute of Cancer Research\Documents\UK-cancer-trends\Data\Risk_Factor_Data_Joinpoint_Output.txt)")


# Prepare data for plotting
plot_data <- data_jp_output |>
  # filter(section...variable == var) |>
  mutate(

    # Create significant indicator
    significant = grepl(APC, pattern = "\\*"),

    # Remove * from APC and make numeric
    APC = as.numeric(gsub(APC, pattern = "\\*", replacement = ""))

  ) |>
  group_by(section...variable, country, group) |>
  arrange(desc(year)) |>
  mutate(

    row_number = row_number(),

    first_na_row = min(row_number[is.na(APC)], max(row_number))

  ) |>
  filter(row_number <= first_na_row) |>
  summarise(

    year_range = paste0("(", min(year), ", ", max(year), ")"),

    APC = APC[1],

    significant = significant[1]

  )
  
# Plot data
plot <- ggplot(plot_data, aes(x = country, y = APC, fill = group)) +
  scale_fill_manual(values = c("#D01556FF", "#EFDC60FF", "#7CCA89FF")) +
  geom_bar(stat = "Identity", position = position_dodge(), colour = "black") +
  xlab("Country") +
  labs(fill = "Group") +
  coord_flip() +
  geom_hline(yintercept = 0) +
  geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf),
            colour = "black", fill = NA, inherit.aes = FALSE) +
  facet_wrap( ~section...variable, scales = "free_y", shrink = T) +
  geom_text(aes(label = ifelse(significant, "*", ""),
              hjust = ifelse(APC>0, -0.1, 1.1)),
          position = position_dodge(width = 0.9),
          vjust = 0.8,
          size = 6) +
  theme(strip.text = element_text(face = "bold"))

print(plot)
      
ggsave(plot, filename = r"(C:\Users\rfrost\OneDrive - The Institute of Cancer Research\Documents\UK-cancer-trends\Position Paper Plots\Risk Factor APC.png)", height = 13, width = 22, bg = "white")
  
  




```


## Creating gt table from joinpoint output
```{r, results = "asis"}


gt_data <- plot_data |>
  group_by(section...variable, country) |>
  filter(case_when(
    "All" %in% group ~ group == "All",
    TRUE ~ TRUE
  )) |>
  ungroup() |>
  mutate(
    
    # Create variable to pass and create arrows in gt table
    arrow_indicator = case_when(
      significant & APC < 0 ~ -1,
      significant & APC > 0 ~ 1,
      TRUE ~ 0)
    
  )


# Grab Great Britain rows and split into multiple
gt_data_gb <- gt_data |>
  filter(country == "Great Britain")

for(x in c("England", "Scotland", "Wales")){
  temp_data <- gt_data_gb |>
    mutate(country = x)
  
  gt_data <- rbind(gt_data, temp_data)
}

# Grab England and Wales rows and split into multiple
gt_data_england_and_wales <- gt_data |>
  filter(country == "England and Wales")

for(x in c("England", "Wales")){
  temp_data <- gt_data_england_and_wales |>
    mutate(country = x)
  
  gt_data <- rbind(gt_data, temp_data)
}

# Filter other countries out of gt data and pivot
gt_data <- gt_data |>
  filter(country %in% c("England", "Scotland", "Wales", "N. Ireland")) |>
  mutate(arrow = case_when(
    arrow_indicator == -1 ~ "↓",
    arrow_indicator == 1 ~  "↑",
    arrow_indicator == 0 ~ "-"
  )) |>
  pivot_wider(names_from = country, values_from = arrow, id_cols = section...variable) |>
  mutate_all(~ ifelse(is.na(.), "", .)) |>
  rename(Variable = `section...variable`)

# Make into gt table
gt_data <- gt_data |>
  gt() |>
  # Align column results to center
  cols_align(
    align = "center",
    columns = c(England, `N. Ireland`, Scotland, Wales)
  ) |>
  # Make arrows etc bold
  tab_style(
    style = list(
      cell_text(weight = "bold")
    ),
    locations = cells_column_labels(c(England, `N. Ireland`, Scotland, Wales))
  ) |>
  # Make column headers bold + center countries
  tab_style(
    style = list(
      cell_text(align = "center")
    ),
    locations = cells_column_labels(c(England, `N. Ireland`, Scotland, Wales))
   ) |>
  tab_style(
    style = list(
      cell_text(weight = "bold")
    ),
    locations = cells_column_labels(everything())
   )
  
  
  for(x in c("England", "Scotland", "Wales", "N. Ireland")){
    
    col = sym(x)
    
    gt_data <- gt_data |>
      tab_style(
        style = list(
          cell_text(color = "#D83800FF", weight = "bold")
        ),
        locations = cells_body(
          columns = x,
          rows = !!col == "↓"
        )
      ) |>
      tab_style(
        style = list(
          cell_text(color = "#489838FF", weight = "bold")
        ),
        locations = cells_body(
          columns = x,
          rows = !!col == "↑"
        )
      ) |>
      tab_header("Recent Trends in Risk Factors")
    
  }
  
  
print(gt_data)

gtsave(gt_data, filename = r"(C:\Users\rfrost\OneDrive - The Institute of Cancer Research\Documents\UK-cancer-trends\Position Paper Tables\Risk_Factor_Trend.png)")


```
