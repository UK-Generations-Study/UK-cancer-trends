---
title: "Cancer Projections"
format: 
  html:
    toc: true
    toc-depth: 5
    grid:
      sidebar-width: 300px
      body-width: 2000px
      margin-width: 300px
      gutter-width: 1.5rem
editor: visual
---

## Packages
```{r}
library(dplyr)
library(readxl)
library(ggplot2)
library(gridExtra)
library(scales)
```

## Setup
```{r, setup}
# knitr::opts_knit$set(root.dir = "C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/Position Paper/Data")
knitr::opts_knit$set(root.dir = "C:/Users/rfrost/OneDrive - The Institute of Cancer Research/Documents/UK-cancer-trends/Data")
theme_set(theme_minimal())
```

## Functions
```{r}

extract_joinpoint_splines <- function(data_jp){
  
  joins <- data_jp |>
    filter(grepl(Flag, pattern = "Joinpoint")) |>
    mutate(section = as.numeric(gsub(Flag, pattern = "Joinpoint ", replacement = "")))
  
  joins2 <- joins |>
    mutate(section = section + 1)
  
  start_end <- data_jp |>
    filter(row_number() %in% c(1, nrow(data_jp))) |>
    arrange(Year) |>
    mutate(section = case_when(
      row_number() == 1 ~ 1,
      row_number() == 2 ~ Joinpoints[1] + 1
    )) |>
    rbind(joins) |>
    rbind(joins2) |>
    select(Year, Model, section) |>
    arrange(Year, section)
  
  

  output_data <- data.frame()

  # Adding in points to get to exponential curves
  for(i in 1:(max(data_jp$Joinpoints)+1)){
    
    tempdata <- start_end[start_end$section == i,]

    new_data <- data.frame(Year = seq(tempdata$Year[1], tempdata$Year[2], by = 0.1))
    new_data$Model <- seq(log(tempdata$Model[1]), log(tempdata$Model[2]), by = (log(tempdata$Model[2]) - log(tempdata$Model[1]))/(nrow(new_data)-1))
    new_data$Model <- exp(new_data$Model)
    new_data$section <- i

    output_data <- rbind(output_data, new_data)

  }
  
  return(output_data)
  
}


plot_joinpoint_output <- function(cancer, sex, data, data_jp, incmort, projection.yr = NA, projection.target = NA){
  
  # Filter both dataframes for the relevant data
  data <- data |>
    filter(`Cancer label` == cancer, Sex == sex)
  data_jp <- data_jp |>
    filter(Cancer.label == cancer, Sex == sex)
  
  jp_plot <- extract_joinpoint_splines(data_jp)
  
  sex_lab <- ifelse(sex == 2, "Women", "Men")
  
  projection <- !is.na(projection.yr) & !is.na(projection.target)
  
  proj_lab <- ifelse(projection, "Projections", "Trends")
  
  plot <- ggplot(data = data, aes(x = Year, y = `ASR (World)`)) +
      geom_point() +
      geom_line(data = jp_plot, aes(x = Year, y = Model, colour = factor(section))) +
      scale_colour_discrete() +
      guides(colour = "none") +
      # geom_point(data = jp_plot, aes(x = Year, y = Model, colour = section)) +
      ggtitle(paste0(incmort, " ", proj_lab, " for ", cancer, " Cancer in ", sex_lab))
  
  if(projection){  
    final <- data_jp |>
      arrange(desc(Year)) |>
      filter(row_number() == 1) |>
      mutate(APC = as.numeric(gsub(APC, pattern = "\\*", replacement = "")),
             APCnew = 1 + APC/100)
    
    final_data <- data |>
      arrange(desc(Year)) |>
      filter(row_number()==1)

    
    proj_data <- data.frame(Year = seq(final$Year, projection.yr, by = 0.1))
    proj_data$lograte <- seq(from = log(final$Model), by = log((final$APCnew)^(1/10)), length.out = nrow(proj_data))
    proj_data$rate <- exp(proj_data$lograte)
    
    plot <- plot +
      geom_line(data = proj_data, aes(x = Year, y = rate), colour = "red", linetype = "dashed") +
      geom_hline(yintercept = final_data$`ASR (World)`*projection.target, colour = "forestgreen")
  }
  
  return(plot)
  
}


```

## Cancer Incidence/Mortality
In these plots, the red dashed line represents 
```{r, fig.width=20}

incidence_data <- read_excel("Cancer_Projection_Data.xlsx") |>
  filter(Type == 0)

incidence_jp <- read.delim("Cancer_Incidence_Joinpoint.txt", sep = "\t")

mortality_data <- read_excel("Cancer_Projection_Data.xlsx") |>
  filter(Type == 1)

mortality_jp <- read.delim("Cancer_Mortality_Joinpoint.txt", sep = "\t")

cancers <- unique(mortality_data$`Cancer label`)
sexes <- c(1,2)

plots <- list()

for(cancer in cancers){
  for(sex in sexes){
    if((cancer == "Prostate" & sex == 2) | 
       (cancer == "Breast" & sex == 1)){
      
    } else {
      p1 <- plot_joinpoint_output(cancer, sex, incidence_data, incidence_jp, "Incidence")
      # plots[[paste0(cancer, "|", sex, "|Incidence")]] <- plot_joinpoint_output(cancer, sex, incidence_data, incidence_jp, "Incidence")
      p2 <- plot_joinpoint_output(cancer, sex, mortality_data, mortality_jp, "Mortality", projection.yr = 2040, projection.target = 0.85)
      # plots[[paste0(cancer, "|", sex, "|Mortality")]] <- plot_joinpoint_output(cancer, sex, mortality_data, mortality_jp, "Mortality", projection.yr = 2035, projection.target = 0.91)
      grid.arrange(p1, p2, nrow = 1, widths = c(4,4))
    }
  }
}

```

## Pretty Plots for Presentation - BC Incidence
```{r}

# Filter both dataframes for the relevant data
data <- incidence_data |>
  filter(`Cancer label` == "Breast")
data_jp <- incidence_jp |>
  filter(Cancer.label == "Breast")

jp_plot <- extract_joinpoint_splines(data_jp)

plot <- ggplot(data = data, aes(x = Year, y = `ASR (World)`)) +
    geom_point() +
    geom_line(data = jp_plot, aes(x = Year, y = Model, colour = factor(section))) +
    scale_colour_discrete() +
    guides(colour = "none") +
    ggtitle("Incidence Rates for Breast Cancer in the UK")

final <- data_jp |>
  arrange(desc(Year)) |>
  filter(row_number() == 1) |>
  mutate(APC = as.numeric(gsub(APC, pattern = "\\*", replacement = "")),
         APCnew = 1 + APC/100)

final_data <- data |>
  arrange(desc(Year)) |>
  filter(row_number()==1)


proj_data <- data.frame(Year = seq(final$Year, 2040, by = 0.1))
proj_data$lograte <- seq(from = log(final$Model), by = log((final$APCnew)^(1/10)), length.out = nrow(proj_data))
proj_data$rate <- exp(proj_data$lograte)

plot <- plot +
  geom_line(data = proj_data, aes(x = Year, y = rate), colour = "red", linetype = "dashed") 

plot +
  scale_x_continuous(breaks = pretty_breaks())


```

## Pretty Plots for Presentation - BC Mortality
Incidence is only from 1993 so will edit the Mortality to be from that date
```{r}

# Filter both dataframes for the relevant data
data <- mortality_data |>
  filter(`Cancer label` == "Breast") |>
  filter(Year >= 1993)
data_jp <- mortality_jp |>
  filter(Cancer.label == "Breast")

jp_plot <- extract_joinpoint_splines(data_jp) |>
  filter(Year >= 1993)

plot <- ggplot(data = data, aes(x = Year, y = `ASR (World)`)) +
    geom_point() +
    geom_line(data = jp_plot, aes(x = Year, y = Model, colour = factor(section))) +
    scale_colour_discrete() +
    guides(colour = "none") +
    ggtitle("Mortality Rates for Breast Cancer in the UK")

final <- data_jp |>
  arrange(desc(Year)) |>
  filter(row_number() == 1) |>
  mutate(APC = as.numeric(gsub(APC, pattern = "\\*", replacement = "")),
         APCnew = 1 + APC/100)

final_data <- data |>
  arrange(desc(Year)) |>
  filter(row_number()==1)


proj_data <- data.frame(Year = seq(final$Year, 2040, by = 0.1))
proj_data$lograte <- seq(from = log(final$Model), by = log((final$APCnew)^(1/10)), length.out = nrow(proj_data))
proj_data$rate <- exp(proj_data$lograte)

plot <- plot +
  geom_line(data = proj_data, aes(x = Year, y = rate), colour = "red", linetype = "dashed") +
  geom_hline(yintercept = final_data$`ASR (World)`*0.85, colour = "forestgreen")

plot +
  scale_x_continuous(breaks = pretty_breaks())

```